

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Mar 05 15:02:36 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1
    26                           	psect	text18,global,reloc=2,class=CODE,delta=1
    27                           	psect	text19,global,reloc=2,class=CODE,delta=1
    28                           	psect	text20,global,reloc=2,class=CODE,delta=1
    29                           	psect	text21,global,reloc=2,class=CODE,delta=1
    30                           	psect	text22,global,reloc=2,class=CODE,delta=1
    31                           	psect	text23,global,reloc=2,class=CODE,delta=1
    32                           	psect	text24,global,reloc=2,class=CODE,delta=1
    33                           	psect	text25,global,reloc=2,class=CODE,delta=1
    34                           	psect	text26,global,reloc=2,class=CODE,delta=1
    35                           	psect	text27,global,reloc=2,class=CODE,delta=1
    36                           	psect	text28,global,reloc=2,class=CODE,delta=1
    37                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    42   000000                     
    43                           ; Generated 21/07/2023 GMT
    44                           ; 
    45                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution. Publication is not required when
    59                           ;        this file is used in an embedded application.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC18F67K40 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77   000000                     _SSP2CON2	set	3802
    78   000000                     _INT0PPS	set	3568
    79   000000                     _SSP2CLKPPS	set	3612
    80   000000                     _SSP2DATPPS	set	3613
    81   000000                     _ANSELDbits	set	3751
    82   000000                     _SSP2ADD	set	3798
    83   000000                     _SSP2CON1bits	set	3801
    84   000000                     _SSP2CON2bits	set	3802
    85   000000                     _LATAbits	set	3961
    86   000000                     _LATEbits	set	3965
    87   000000                     _LATGbits	set	3967
    88   000000                     _TRISAbits	set	3969
    89   000000                     _LATHbits	set	3968
    90   000000                     _TRISDbits	set	3972
    91   000000                     _LATDbits	set	3964
    92   000000                     _SSP2STAT	set	3800
    93   000000                     _TRISEbits	set	3973
    94   000000                     _TRISGbits	set	3975
    95   000000                     _TRISHbits	set	3976
    96   000000                     _SSP2BUF	set	3797
    97   000000                     _IPR0bits	set	3615
    98   000000                     _PIE0bits	set	3625
    99   000000                     _RD5PPS	set	3695
   100   000000                     _ANSELBbits	set	3738
   101   000000                     _RD6PPS	set	3696
   102   000000                     _TMR0L	set	4051
   103   000000                     _TMR0H	set	4052
   104   000000                     _T0CON0bits	set	4053
   105   000000                     _T0CON1bits	set	4054
   106   000000                     _INTCONbits	set	4082
   107   000000                     _PIR0bits	set	3635
   108                           
   109                           ; #config settings
   110                           
   111                           	psect	cinit
   112   00152A                     __pcinit:
   113                           	callstack 0
   114   00152A                     start_initialization:
   115                           	callstack 0
   116   00152A                     __initialization:
   117                           	callstack 0
   118                           
   119                           ; Clear objects allocated to COMRAM (35 bytes)
   120   00152A  EE00  F02B         	lfsr	0,__pbssCOMRAM
   121   00152E  0E23               	movlw	35
   122   001530                     clear_0:
   123   001530  6AEE               	clrf	postinc0,c
   124   001532  06E8               	decf	wreg,f,c
   125   001534  E1FD               	bnz	clear_0
   126   001536                     end_of_initialization:
   127                           	callstack 0
   128   001536                     __end_of__initialization:
   129                           	callstack 0
   130   001536  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   131   001538  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   132   00153A  0100               	movlb	0
   133   00153C  EF01  F007         	goto	_main	;jump to C main() function
   134                           
   135                           	psect	bssCOMRAM
   136   00002B                     __pbssCOMRAM:
   137                           	callstack 0
   138   00002B                     _z:
   139                           	callstack 0
   140   00002B                     	ds	2
   141   00002D                     _y:
   142                           	callstack 0
   143   00002D                     	ds	2
   144   00002F                     _x:
   145                           	callstack 0
   146   00002F                     	ds	2
   147   000031                     _w:
   148                           	callstack 0
   149   000031                     	ds	2
   150   000033                     _colourCode:
   151                           	callstack 0
   152   000033                     	ds	2
   153   000035                     _increment:
   154                           	callstack 0
   155   000035                     	ds	2
   156   000037                     _clear:
   157                           	callstack 0
   158   000037                     	ds	2
   159   000039                     _blue:
   160                           	callstack 0
   161   000039                     	ds	2
   162   00003B                     _green:
   163                           	callstack 0
   164   00003B                     	ds	2
   165   00003D                     _red:
   166                           	callstack 0
   167   00003D                     	ds	2
   168   00003F                     _wall_detected:
   169                           	callstack 0
   170   00003F                     	ds	1
   171   000040                     _RGBC:
   172                           	callstack 0
   173   000040                     	ds	8
   174   000048                     _normRGB:
   175                           	callstack 0
   176   000048                     	ds	6
   177                           
   178                           	psect	cstackCOMRAM
   179   000001                     __pcstackCOMRAM:
   180                           	callstack 0
   181   000001                     ??i2_I2C_2_Master_Idle:
   182   000001                     
   183                           ; 1 bytes @ 0x0
   184   000001                     	ds	1
   185   000002                     ??_I2C_2_Master_Read:
   186   000002                     i2I2C_2_Master_Write@data_byte:
   187                           	callstack 0
   188                           
   189                           ; 1 bytes @ 0x1
   190   000002                     	ds	1
   191   000003                     I2C_2_Master_Read@ack:
   192                           	callstack 0
   193                           
   194                           ; 1 bytes @ 0x2
   195   000003                     	ds	1
   196   000004                     I2C_2_Master_Read@tmp:
   197                           	callstack 0
   198                           
   199                           ; 1 bytes @ 0x3
   200   000004                     	ds	1
   201   000005                     ?_readRedColor:
   202                           	callstack 0
   203   000005                     ?_readGreenColor:
   204                           	callstack 0
   205   000005                     ?_readBlueColor:
   206                           	callstack 0
   207   000005                     ?_readClearColor:
   208                           	callstack 0
   209                           
   210                           ; 2 bytes @ 0x4
   211   000005                     	ds	2
   212   000007                     ??_readRedColor:
   213   000007                     ??_readGreenColor:
   214   000007                     ??_readBlueColor:
   215   000007                     ??_readClearColor:
   216                           
   217                           ; 1 bytes @ 0x6
   218   000007                     	ds	3
   219   00000A                     readRedColor@tmp:
   220                           	callstack 0
   221   00000A                     readGreenColor@tmp:
   222                           	callstack 0
   223   00000A                     readBlueColor@tmp:
   224                           	callstack 0
   225   00000A                     readClearColor@tmp:
   226                           	callstack 0
   227                           
   228                           ; 2 bytes @ 0x9
   229   00000A                     	ds	2
   230   00000C                     ??_High_ISR:
   231                           
   232                           ; 1 bytes @ 0xB
   233   00000C                     	ds	2
   234   00000E                     ??_I2C_2_Master_Idle:
   235   00000E                     ?_decideColor:
   236                           	callstack 0
   237   00000E                     ?___lwdiv:
   238                           	callstack 0
   239   00000E                     decideColor@normRGB:
   240                           	callstack 0
   241   00000E                     ___lwdiv@dividend:
   242                           	callstack 0
   243                           
   244                           ; 2 bytes @ 0xD
   245   00000E                     	ds	1
   246   00000F                     I2C_2_Master_Write@data_byte:
   247                           	callstack 0
   248                           
   249                           ; 1 bytes @ 0xE
   250   00000F                     	ds	1
   251   000010                     color_writetoaddr@value:
   252                           	callstack 0
   253   000010                     ___lwdiv@divisor:
   254                           	callstack 0
   255                           
   256                           ; 2 bytes @ 0xF
   257   000010                     	ds	1
   258   000011                     color_writetoaddr@address:
   259                           	callstack 0
   260                           
   261                           ; 1 bytes @ 0x10
   262   000011                     	ds	1
   263   000012                     ??_color_click_init:
   264   000012                     ___lwdiv@quotient:
   265                           	callstack 0
   266                           
   267                           ; 2 bytes @ 0x11
   268   000012                     	ds	2
   269   000014                     ___lwdiv@counter:
   270                           	callstack 0
   271                           
   272                           ; 1 bytes @ 0x13
   273   000014                     	ds	1
   274   000015                     normalizeColors@RGBC:
   275                           	callstack 0
   276                           
   277                           ; 1 bytes @ 0x14
   278   000015                     	ds	1
   279   000016                     normalizeColors@normRGB:
   280                           	callstack 0
   281                           
   282                           ; 1 bytes @ 0x15
   283   000016                     	ds	1
   284   000017                     ??_normalizeColors:
   285                           
   286                           ; 1 bytes @ 0x16
   287   000017                     	ds	8
   288   00001F                     normalizeColors@sum:
   289                           	callstack 0
   290                           
   291                           ; 2 bytes @ 0x1E
   292   00001F                     	ds	2
   293   000021                     _normalizeColors$1889:
   294                           	callstack 0
   295                           
   296                           ; 2 bytes @ 0x20
   297   000021                     	ds	2
   298   000023                     ??_main:
   299                           
   300                           ; 1 bytes @ 0x22
   301   000023                     	ds	2
   302   000025                     main@i:
   303                           	callstack 0
   304                           
   305                           ; 1 bytes @ 0x24
   306   000025                     	ds	1
   307   000026                     main@i_705:
   308                           	callstack 0
   309                           
   310                           ; 1 bytes @ 0x25
   311   000026                     	ds	1
   312   000027                     main@i_706:
   313                           	callstack 0
   314                           
   315                           ; 1 bytes @ 0x26
   316   000027                     	ds	1
   317   000028                     main@i_707:
   318                           	callstack 0
   319                           
   320                           ; 1 bytes @ 0x27
   321   000028                     	ds	1
   322   000029                     main@colourCode:
   323                           	callstack 0
   324                           
   325                           ; 2 bytes @ 0x28
   326   000029                     	ds	2
   327                           
   328 ;;
   329 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   330 ;;
   331 ;; *************** function _main *****************
   332 ;; Defined at:
   333 ;;		line 32 in file "main.c"
   334 ;; Parameters:    Size  Location     Type
   335 ;;		None
   336 ;; Auto vars:     Size  Location     Type
   337 ;;  i               1   39[COMRAM] unsigned char 
   338 ;;  i               1   38[COMRAM] unsigned char 
   339 ;;  i               1   37[COMRAM] unsigned char 
   340 ;;  i               1   36[COMRAM] unsigned char 
   341 ;;  colourCode      2   40[COMRAM] unsigned int 
   342 ;; Return value:  Size  Location     Type
   343 ;;                  1    wreg      void 
   344 ;; Registers used:
   345 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   346 ;; Tracked objects:
   347 ;;		On entry : 0/0
   348 ;;		On exit  : 0/0
   349 ;;		Unchanged: 0/0
   350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   352 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   353 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   354 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   355 ;;Total ram usage:        8 bytes
   356 ;; Hardware stack levels required when called: 8
   357 ;; This function calls:
   358 ;;		_LEDturnON
   359 ;;		_Timer0_init
   360 ;;		_color_click_init
   361 ;;		_decideColor
   362 ;;		_init_buttons_LED
   363 ;;		_interrupts_init
   364 ;;		_normalizeColors
   365 ;; This function is called by:
   366 ;;		Startup code after reset
   367 ;; This function uses a non-reentrant model
   368 ;;
   369                           
   370                           	psect	text0
   371   000E02                     __ptext0:
   372                           	callstack 0
   373   000E02                     _main:
   374                           	callstack 23
   375   000E02                     
   376                           ;main.c: 33:     color_click_init();
   377   000E02  EC1B  F00A         	call	_color_click_init	;wreg free
   378   000E06                     
   379                           ;main.c: 34:     init_buttons_LED();
   380   000E06  ECB6  F00A         	call	_init_buttons_LED	;wreg free
   381   000E0A                     
   382                           ;main.c: 35:     TRISDbits.TRISD7 = 0;
   383   000E0A  9E84               	bcf	132,7,c	;volatile
   384   000E0C                     
   385                           ;main.c: 36:     LATDbits.LATD7 = 0;
   386   000E0C  9E7C               	bcf	124,7,c	;volatile
   387   000E0E                     
   388                           ;main.c: 37:     interrupts_init();
   389   000E0E  EC32  F009         	call	_interrupts_init	;wreg free
   390   000E12                     
   391                           ;main.c: 38:     Timer0_init();
   392   000E12  EC87  F00A         	call	_Timer0_init	;wreg free
   393   000E16                     
   394                           ;main.c: 40:     LEDturnON();
   395   000E16  ECD6  F00A         	call	_LEDturnON	;wreg free
   396   000E1A                     
   397                           ;main.c: 41:     _delay((unsigned long)((1000)*(64000000/4000.0)));
   398   000E1A  0E52               	movlw	82
   399   000E1C  6E24               	movwf	(??_main+1)^0,c
   400   000E1E  0E2B               	movlw	43
   401   000E20  6E23               	movwf	??_main^0,c
   402   000E22  0E00               	movlw	0
   403   000E24                     u537:
   404   000E24  2EE8               	decfsz	wreg,f,c
   405   000E26  D7FE               	bra	u537
   406   000E28  2E23               	decfsz	??_main^0,f,c
   407   000E2A  D7FC               	bra	u537
   408   000E2C  2E24               	decfsz	(??_main+1)^0,f,c
   409   000E2E  D7FA               	bra	u537
   410   000E30  D000               	nop2	
   411   000E32                     
   412                           ;main.c: 43:     LATDbits.LATD7 = 1;
   413   000E32  8E7C               	bsf	124,7,c	;volatile
   414   000E34                     l1611:
   415                           
   416                           ;main.c: 52:         if (wall_detected) {
   417   000E34  503F               	movf	_wall_detected^0,w,c
   418   000E36  B4D8               	btfsc	status,2,c
   419   000E38  EF20  F007         	goto	u411
   420   000E3C  EF22  F007         	goto	u410
   421   000E40                     u411:
   422   000E40  EF1A  F007         	goto	l1611
   423   000E44                     u410:
   424   000E44                     
   425                           ;main.c: 54:             normalizeColors(&RGBC, &normRGB);
   426   000E44  0E40               	movlw	low _RGBC
   427   000E46  6E15               	movwf	normalizeColors@RGBC^0,c
   428   000E48  0E48               	movlw	low _normRGB
   429   000E4A  6E16               	movwf	normalizeColors@normRGB^0,c
   430   000E4C  ECF4  F007         	call	_normalizeColors	;wreg free
   431                           
   432                           ;main.c: 57:             unsigned int colourCode = decideColor(&normRGB);
   433   000E50  0E48               	movlw	low _normRGB
   434   000E52  6E0E               	movwf	decideColor@normRGB^0,c
   435   000E54  EC88  F008         	call	_decideColor	;wreg free
   436   000E58  C00E  F029         	movff	?_decideColor,main@colourCode
   437   000E5C  C00F  F02A         	movff	?_decideColor+1,main@colourCode+1
   438   000E60                     
   439                           ;main.c: 59:             if (colourCode == 1) {
   440   000E60  0429               	decf	main@colourCode^0,w,c
   441   000E62  102A               	iorwf	(main@colourCode+1)^0,w,c
   442   000E64  A4D8               	btfss	status,2,c
   443   000E66  EF37  F007         	goto	u421
   444   000E6A  EF39  F007         	goto	u420
   445   000E6E                     u421:
   446   000E6E  EF5E  F007         	goto	l1631
   447   000E72                     u420:
   448   000E72                     
   449                           ;main.c: 60:                 TRISHbits.TRISH3 = 0;
   450   000E72  9688               	bcf	136,3,c	;volatile
   451   000E74                     
   452                           ;main.c: 61:                 for (char i=0; i<1; i++) {
   453   000E74  0E00               	movlw	0
   454   000E76  6E25               	movwf	main@i^0,c
   455   000E78                     l173:
   456                           
   457                           ;main.c: 62:                     LATHbits.LATH3 = 1;
   458   000E78  8680               	bsf	128,3,c	;volatile
   459   000E7A                     
   460                           ;main.c: 63:                     _delay((unsigned long)((150)*(64000000/4000.0)));
   461   000E7A  0E0D               	movlw	13
   462   000E7C  6E24               	movwf	(??_main+1)^0,c
   463   000E7E  0E2D               	movlw	45
   464   000E80  6E23               	movwf	??_main^0,c
   465   000E82  0ED8               	movlw	216
   466   000E84                     u547:
   467   000E84  2EE8               	decfsz	wreg,f,c
   468   000E86  D7FE               	bra	u547
   469   000E88  2E23               	decfsz	??_main^0,f,c
   470   000E8A  D7FC               	bra	u547
   471   000E8C  2E24               	decfsz	(??_main+1)^0,f,c
   472   000E8E  D7FA               	bra	u547
   473   000E90                     
   474                           ;main.c: 64:                     LATHbits.LATH3 = 0;
   475   000E90  9680               	bcf	128,3,c	;volatile
   476                           
   477                           ;main.c: 65:                     _delay((unsigned long)((100)*(64000000/4000.0)));
   478   000E92  0E09               	movlw	9
   479   000E94  6E24               	movwf	(??_main+1)^0,c
   480   000E96  0E1E               	movlw	30
   481   000E98  6E23               	movwf	??_main^0,c
   482   000E9A  0EE4               	movlw	228
   483   000E9C                     u557:
   484   000E9C  2EE8               	decfsz	wreg,f,c
   485   000E9E  D7FE               	bra	u557
   486   000EA0  2E23               	decfsz	??_main^0,f,c
   487   000EA2  D7FC               	bra	u557
   488   000EA4  2E24               	decfsz	(??_main+1)^0,f,c
   489   000EA6  D7FA               	bra	u557
   490   000EA8  D000               	nop2	
   491   000EAA                     
   492                           ;main.c: 66:                 }
   493   000EAA  2A25               	incf	main@i^0,f,c
   494   000EAC  5025               	movf	main@i^0,w,c
   495   000EAE  B4D8               	btfsc	status,2,c
   496   000EB0  EF5C  F007         	goto	u431
   497   000EB4  EF5E  F007         	goto	u430
   498   000EB8                     u431:
   499   000EB8  EF3C  F007         	goto	l173
   500   000EBC                     u430:
   501   000EBC                     l1631:
   502                           
   503                           ;main.c: 69:             if (colourCode == 2) {
   504   000EBC  0E02               	movlw	2
   505   000EBE  1829               	xorwf	main@colourCode^0,w,c
   506   000EC0  102A               	iorwf	(main@colourCode+1)^0,w,c
   507   000EC2  A4D8               	btfss	status,2,c
   508   000EC4  EF66  F007         	goto	u441
   509   000EC8  EF68  F007         	goto	u440
   510   000ECC                     u441:
   511   000ECC  EF8D  F007         	goto	l1647
   512   000ED0                     u440:
   513   000ED0                     
   514                           ;main.c: 70:                 TRISHbits.TRISH3 = 0;
   515   000ED0  9688               	bcf	136,3,c	;volatile
   516   000ED2                     
   517                           ;main.c: 71:                 for (char i=0; i<2; i++) {
   518   000ED2  0E00               	movlw	0
   519   000ED4  6E26               	movwf	main@i_705^0,c
   520   000ED6                     l176:
   521                           
   522                           ;main.c: 72:                     LATHbits.LATH3 = 1;
   523   000ED6  8680               	bsf	128,3,c	;volatile
   524   000ED8                     
   525                           ;main.c: 73:                     _delay((unsigned long)((150)*(64000000/4000.0)));
   526   000ED8  0E0D               	movlw	13
   527   000EDA  6E24               	movwf	(??_main+1)^0,c
   528   000EDC  0E2D               	movlw	45
   529   000EDE  6E23               	movwf	??_main^0,c
   530   000EE0  0ED8               	movlw	216
   531   000EE2                     u567:
   532   000EE2  2EE8               	decfsz	wreg,f,c
   533   000EE4  D7FE               	bra	u567
   534   000EE6  2E23               	decfsz	??_main^0,f,c
   535   000EE8  D7FC               	bra	u567
   536   000EEA  2E24               	decfsz	(??_main+1)^0,f,c
   537   000EEC  D7FA               	bra	u567
   538   000EEE                     
   539                           ;main.c: 74:                     LATHbits.LATH3 = 0;
   540   000EEE  9680               	bcf	128,3,c	;volatile
   541                           
   542                           ;main.c: 75:                     _delay((unsigned long)((100)*(64000000/4000.0)));
   543   000EF0  0E09               	movlw	9
   544   000EF2  6E24               	movwf	(??_main+1)^0,c
   545   000EF4  0E1E               	movlw	30
   546   000EF6  6E23               	movwf	??_main^0,c
   547   000EF8  0EE4               	movlw	228
   548   000EFA                     u577:
   549   000EFA  2EE8               	decfsz	wreg,f,c
   550   000EFC  D7FE               	bra	u577
   551   000EFE  2E23               	decfsz	??_main^0,f,c
   552   000F00  D7FC               	bra	u577
   553   000F02  2E24               	decfsz	(??_main+1)^0,f,c
   554   000F04  D7FA               	bra	u577
   555   000F06  D000               	nop2	
   556   000F08                     
   557                           ;main.c: 76:                 }
   558   000F08  2A26               	incf	main@i_705^0,f,c
   559   000F0A  0E01               	movlw	1
   560   000F0C  6426               	cpfsgt	main@i_705^0,c
   561   000F0E  EF8B  F007         	goto	u451
   562   000F12  EF8D  F007         	goto	u450
   563   000F16                     u451:
   564   000F16  EF6B  F007         	goto	l176
   565   000F1A                     u450:
   566   000F1A                     l1647:
   567                           
   568                           ;main.c: 79:             if (colourCode == 3) {
   569   000F1A  0E03               	movlw	3
   570   000F1C  1829               	xorwf	main@colourCode^0,w,c
   571   000F1E  102A               	iorwf	(main@colourCode+1)^0,w,c
   572   000F20  A4D8               	btfss	status,2,c
   573   000F22  EF95  F007         	goto	u461
   574   000F26  EF97  F007         	goto	u460
   575   000F2A                     u461:
   576   000F2A  EFBC  F007         	goto	l1663
   577   000F2E                     u460:
   578   000F2E                     
   579                           ;main.c: 80:                 TRISHbits.TRISH3 = 0;
   580   000F2E  9688               	bcf	136,3,c	;volatile
   581   000F30                     
   582                           ;main.c: 81:                 for (char i=0; i<3; i++) {
   583   000F30  0E00               	movlw	0
   584   000F32  6E27               	movwf	main@i_706^0,c
   585   000F34                     l179:
   586                           
   587                           ;main.c: 82:                     LATHbits.LATH3 = 1;
   588   000F34  8680               	bsf	128,3,c	;volatile
   589   000F36                     
   590                           ;main.c: 83:                     _delay((unsigned long)((150)*(64000000/4000.0)));
   591   000F36  0E0D               	movlw	13
   592   000F38  6E24               	movwf	(??_main+1)^0,c
   593   000F3A  0E2D               	movlw	45
   594   000F3C  6E23               	movwf	??_main^0,c
   595   000F3E  0ED8               	movlw	216
   596   000F40                     u587:
   597   000F40  2EE8               	decfsz	wreg,f,c
   598   000F42  D7FE               	bra	u587
   599   000F44  2E23               	decfsz	??_main^0,f,c
   600   000F46  D7FC               	bra	u587
   601   000F48  2E24               	decfsz	(??_main+1)^0,f,c
   602   000F4A  D7FA               	bra	u587
   603   000F4C                     
   604                           ;main.c: 84:                     LATHbits.LATH3 = 0;
   605   000F4C  9680               	bcf	128,3,c	;volatile
   606                           
   607                           ;main.c: 85:                     _delay((unsigned long)((100)*(64000000/4000.0)));
   608   000F4E  0E09               	movlw	9
   609   000F50  6E24               	movwf	(??_main+1)^0,c
   610   000F52  0E1E               	movlw	30
   611   000F54  6E23               	movwf	??_main^0,c
   612   000F56  0EE4               	movlw	228
   613   000F58                     u597:
   614   000F58  2EE8               	decfsz	wreg,f,c
   615   000F5A  D7FE               	bra	u597
   616   000F5C  2E23               	decfsz	??_main^0,f,c
   617   000F5E  D7FC               	bra	u597
   618   000F60  2E24               	decfsz	(??_main+1)^0,f,c
   619   000F62  D7FA               	bra	u597
   620   000F64  D000               	nop2	
   621   000F66                     
   622                           ;main.c: 86:                 }
   623   000F66  2A27               	incf	main@i_706^0,f,c
   624   000F68  0E02               	movlw	2
   625   000F6A  6427               	cpfsgt	main@i_706^0,c
   626   000F6C  EFBA  F007         	goto	u471
   627   000F70  EFBC  F007         	goto	u470
   628   000F74                     u471:
   629   000F74  EF9A  F007         	goto	l179
   630   000F78                     u470:
   631   000F78                     l1663:
   632                           
   633                           ;main.c: 89:             if (colourCode == 4) {
   634   000F78  0E04               	movlw	4
   635   000F7A  1829               	xorwf	main@colourCode^0,w,c
   636   000F7C  102A               	iorwf	(main@colourCode+1)^0,w,c
   637   000F7E  A4D8               	btfss	status,2,c
   638   000F80  EFC4  F007         	goto	u481
   639   000F84  EFC6  F007         	goto	u480
   640   000F88                     u481:
   641   000F88  EFEB  F007         	goto	l1679
   642   000F8C                     u480:
   643   000F8C                     
   644                           ;main.c: 90:                 TRISHbits.TRISH3 = 0;
   645   000F8C  9688               	bcf	136,3,c	;volatile
   646   000F8E                     
   647                           ;main.c: 91:                 for (char i=0; i<4; i++) {
   648   000F8E  0E00               	movlw	0
   649   000F90  6E28               	movwf	main@i_707^0,c
   650   000F92                     l182:
   651                           
   652                           ;main.c: 92:                     LATHbits.LATH3 = 1;
   653   000F92  8680               	bsf	128,3,c	;volatile
   654   000F94                     
   655                           ;main.c: 93:                     _delay((unsigned long)((150)*(64000000/4000.0)));
   656   000F94  0E0D               	movlw	13
   657   000F96  6E24               	movwf	(??_main+1)^0,c
   658   000F98  0E2D               	movlw	45
   659   000F9A  6E23               	movwf	??_main^0,c
   660   000F9C  0ED8               	movlw	216
   661   000F9E                     u607:
   662   000F9E  2EE8               	decfsz	wreg,f,c
   663   000FA0  D7FE               	bra	u607
   664   000FA2  2E23               	decfsz	??_main^0,f,c
   665   000FA4  D7FC               	bra	u607
   666   000FA6  2E24               	decfsz	(??_main+1)^0,f,c
   667   000FA8  D7FA               	bra	u607
   668   000FAA                     
   669                           ;main.c: 94:                     LATHbits.LATH3 = 0;
   670   000FAA  9680               	bcf	128,3,c	;volatile
   671                           
   672                           ;main.c: 95:                     _delay((unsigned long)((100)*(64000000/4000.0)));
   673   000FAC  0E09               	movlw	9
   674   000FAE  6E24               	movwf	(??_main+1)^0,c
   675   000FB0  0E1E               	movlw	30
   676   000FB2  6E23               	movwf	??_main^0,c
   677   000FB4  0EE4               	movlw	228
   678   000FB6                     u617:
   679   000FB6  2EE8               	decfsz	wreg,f,c
   680   000FB8  D7FE               	bra	u617
   681   000FBA  2E23               	decfsz	??_main^0,f,c
   682   000FBC  D7FC               	bra	u617
   683   000FBE  2E24               	decfsz	(??_main+1)^0,f,c
   684   000FC0  D7FA               	bra	u617
   685   000FC2  D000               	nop2	
   686   000FC4                     
   687                           ;main.c: 96:                 }
   688   000FC4  2A28               	incf	main@i_707^0,f,c
   689   000FC6  0E03               	movlw	3
   690   000FC8  6428               	cpfsgt	main@i_707^0,c
   691   000FCA  EFE9  F007         	goto	u491
   692   000FCE  EFEB  F007         	goto	u490
   693   000FD2                     u491:
   694   000FD2  EFC9  F007         	goto	l182
   695   000FD6                     u490:
   696   000FD6                     l1679:
   697                           
   698                           ;main.c: 100:             wall_detected = 0;
   699   000FD6  0E00               	movlw	0
   700   000FD8  6E3F               	movwf	_wall_detected^0,c
   701   000FDA                     
   702                           ;main.c: 102:             LEDturnON();
   703   000FDA  ECD6  F00A         	call	_LEDturnON	;wreg free
   704   000FDE                     
   705                           ;main.c: 103:             LATHbits.LATH3 = 0;
   706   000FDE  9680               	bcf	128,3,c	;volatile
   707   000FE0  EF1A  F007         	goto	l1611
   708   000FE4  EF9B  F000         	goto	start
   709   000FE8                     __end_of_main:
   710                           	callstack 0
   711                           
   712 ;; *************** function _normalizeColors *****************
   713 ;; Defined at:
   714 ;;		line 125 in file "color.c"
   715 ;; Parameters:    Size  Location     Type
   716 ;;  RGBC            1   20[COMRAM] PTR struct colors
   717 ;;		 -> RGBC(8), 
   718 ;;  normRGB         1   21[COMRAM] PTR struct normColors
   719 ;;		 -> normRGB(6), 
   720 ;; Auto vars:     Size  Location     Type
   721 ;;  sum             2   30[COMRAM] unsigned int 
   722 ;; Return value:  Size  Location     Type
   723 ;;                  1    wreg      void 
   724 ;; Registers used:
   725 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   726 ;; Tracked objects:
   727 ;;		On entry : 0/0
   728 ;;		On exit  : 0/0
   729 ;;		Unchanged: 0/0
   730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   731 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   732 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   733 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   734 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   735 ;;Total ram usage:       14 bytes
   736 ;; Hardware stack levels used: 1
   737 ;; Hardware stack levels required when called: 5
   738 ;; This function calls:
   739 ;;		___lwdiv
   740 ;; This function is called by:
   741 ;;		_main
   742 ;; This function uses a non-reentrant model
   743 ;;
   744                           
   745                           	psect	text1
   746   000FE8                     __ptext1:
   747                           	callstack 0
   748   000FE8                     _normalizeColors:
   749                           	callstack 25
   750   000FE8                     
   751                           ;color.c: 126:     unsigned int sum = (RGBC->red) + (RGBC->green) + (RGBC->blue);
   752   000FE8  5015               	movf	normalizeColors@RGBC^0,w,c
   753   000FEA  6ED9               	movwf	fsr2l,c
   754   000FEC  6ADA               	clrf	fsr2h,c
   755   000FEE  0E04               	movlw	4
   756   000FF0  26D9               	addwf	fsr2l,f,c
   757   000FF2  CFDE F017          	movff	postinc2,??_normalizeColors
   758   000FF6  CFDD F018          	movff	postdec2,??_normalizeColors+1
   759   000FFA  5015               	movf	normalizeColors@RGBC^0,w,c
   760   000FFC  6ED9               	movwf	fsr2l,c
   761   000FFE  6ADA               	clrf	fsr2h,c
   762   001000  0E02               	movlw	2
   763   001002  26D9               	addwf	fsr2l,f,c
   764   001004  CFDE F019          	movff	postinc2,??_normalizeColors+2
   765   001008  CFDD F01A          	movff	postdec2,??_normalizeColors+3
   766   00100C  5015               	movf	normalizeColors@RGBC^0,w,c
   767   00100E  6ED9               	movwf	fsr2l,c
   768   001010  6ADA               	clrf	fsr2h,c
   769   001012  CFDE F01B          	movff	postinc2,??_normalizeColors+4
   770   001016  CFDD F01C          	movff	postdec2,??_normalizeColors+5
   771   00101A  5019               	movf	(??_normalizeColors+2)^0,w,c
   772   00101C  241B               	addwf	(??_normalizeColors+4)^0,w,c
   773   00101E  6E1D               	movwf	(??_normalizeColors+6)^0,c
   774   001020  501A               	movf	(??_normalizeColors+3)^0,w,c
   775   001022  201C               	addwfc	(??_normalizeColors+5)^0,w,c
   776   001024  6E1E               	movwf	(??_normalizeColors+7)^0,c
   777   001026  5017               	movf	??_normalizeColors^0,w,c
   778   001028  241D               	addwf	(??_normalizeColors+6)^0,w,c
   779   00102A  6E1F               	movwf	normalizeColors@sum^0,c
   780   00102C  5018               	movf	(??_normalizeColors+1)^0,w,c
   781   00102E  201E               	addwfc	(??_normalizeColors+7)^0,w,c
   782   001030  6E20               	movwf	(normalizeColors@sum+1)^0,c
   783   001032                     
   784                           ;color.c: 128:     normRGB->normRed = (RGBC->red) / ((sum)/100);
   785   001032  0E00               	movlw	0
   786   001034  6E11               	movwf	(___lwdiv@divisor+1)^0,c
   787   001036  0E64               	movlw	100
   788   001038  6E10               	movwf	___lwdiv@divisor^0,c
   789   00103A  C01F  F00E         	movff	normalizeColors@sum,___lwdiv@dividend
   790   00103E  C020  F00F         	movff	normalizeColors@sum+1,___lwdiv@dividend+1
   791   001042  ECF8  F008         	call	___lwdiv	;wreg free
   792   001046  C00E  F021         	movff	?___lwdiv,_normalizeColors$1889
   793   00104A  C00F  F022         	movff	?___lwdiv+1,_normalizeColors$1889+1
   794   00104E                     
   795                           ;color.c: 128:     normRGB->normRed = (RGBC->red) / ((sum)/100);
   796   00104E  5015               	movf	normalizeColors@RGBC^0,w,c
   797   001050  6ED9               	movwf	fsr2l,c
   798   001052  6ADA               	clrf	fsr2h,c
   799   001054  CFDE F00E          	movff	postinc2,___lwdiv@dividend
   800   001058  CFDD F00F          	movff	postdec2,___lwdiv@dividend+1
   801   00105C  C021  F010         	movff	_normalizeColors$1889,___lwdiv@divisor
   802   001060  C022  F011         	movff	_normalizeColors$1889+1,___lwdiv@divisor+1
   803   001064  ECF8  F008         	call	___lwdiv	;wreg free
   804   001068  5016               	movf	normalizeColors@normRGB^0,w,c
   805   00106A  6ED9               	movwf	fsr2l,c
   806   00106C  6ADA               	clrf	fsr2h,c
   807   00106E  C00E  FFDE         	movff	?___lwdiv,postinc2
   808   001072  C00F  FFDD         	movff	?___lwdiv+1,postdec2
   809   001076                     
   810                           ;color.c: 129:     normRGB->normGreen = (RGBC->green) / ((sum)/100);
   811   001076  0E00               	movlw	0
   812   001078  6E11               	movwf	(___lwdiv@divisor+1)^0,c
   813   00107A  0E64               	movlw	100
   814   00107C  6E10               	movwf	___lwdiv@divisor^0,c
   815   00107E  C01F  F00E         	movff	normalizeColors@sum,___lwdiv@dividend
   816   001082  C020  F00F         	movff	normalizeColors@sum+1,___lwdiv@dividend+1
   817   001086  ECF8  F008         	call	___lwdiv	;wreg free
   818   00108A  C00E  F021         	movff	?___lwdiv,_normalizeColors$1889
   819   00108E  C00F  F022         	movff	?___lwdiv+1,_normalizeColors$1889+1
   820   001092                     
   821                           ;color.c: 129:     normRGB->normGreen = (RGBC->green) / ((sum)/100);
   822   001092  5015               	movf	normalizeColors@RGBC^0,w,c
   823   001094  6ED9               	movwf	fsr2l,c
   824   001096  6ADA               	clrf	fsr2h,c
   825   001098  0E02               	movlw	2
   826   00109A  26D9               	addwf	fsr2l,f,c
   827   00109C  CFDE F00E          	movff	postinc2,___lwdiv@dividend
   828   0010A0  CFDD F00F          	movff	postdec2,___lwdiv@dividend+1
   829   0010A4  C021  F010         	movff	_normalizeColors$1889,___lwdiv@divisor
   830   0010A8  C022  F011         	movff	_normalizeColors$1889+1,___lwdiv@divisor+1
   831   0010AC  ECF8  F008         	call	___lwdiv	;wreg free
   832   0010B0  5016               	movf	normalizeColors@normRGB^0,w,c
   833   0010B2  6ED9               	movwf	fsr2l,c
   834   0010B4  6ADA               	clrf	fsr2h,c
   835   0010B6  0E02               	movlw	2
   836   0010B8  26D9               	addwf	fsr2l,f,c
   837   0010BA  C00E  FFDE         	movff	?___lwdiv,postinc2
   838   0010BE  C00F  FFDD         	movff	?___lwdiv+1,postdec2
   839   0010C2                     
   840                           ;color.c: 130:     normRGB->normBlue = (RGBC->blue) / ((sum)/100);
   841   0010C2  0E00               	movlw	0
   842   0010C4  6E11               	movwf	(___lwdiv@divisor+1)^0,c
   843   0010C6  0E64               	movlw	100
   844   0010C8  6E10               	movwf	___lwdiv@divisor^0,c
   845   0010CA  C01F  F00E         	movff	normalizeColors@sum,___lwdiv@dividend
   846   0010CE  C020  F00F         	movff	normalizeColors@sum+1,___lwdiv@dividend+1
   847   0010D2  ECF8  F008         	call	___lwdiv	;wreg free
   848   0010D6  C00E  F021         	movff	?___lwdiv,_normalizeColors$1889
   849   0010DA  C00F  F022         	movff	?___lwdiv+1,_normalizeColors$1889+1
   850   0010DE                     
   851                           ;color.c: 130:     normRGB->normBlue = (RGBC->blue) / ((sum)/100);
   852   0010DE  5015               	movf	normalizeColors@RGBC^0,w,c
   853   0010E0  6ED9               	movwf	fsr2l,c
   854   0010E2  6ADA               	clrf	fsr2h,c
   855   0010E4  0E04               	movlw	4
   856   0010E6  26D9               	addwf	fsr2l,f,c
   857   0010E8  CFDE F00E          	movff	postinc2,___lwdiv@dividend
   858   0010EC  CFDD F00F          	movff	postdec2,___lwdiv@dividend+1
   859   0010F0  C021  F010         	movff	_normalizeColors$1889,___lwdiv@divisor
   860   0010F4  C022  F011         	movff	_normalizeColors$1889+1,___lwdiv@divisor+1
   861   0010F8  ECF8  F008         	call	___lwdiv	;wreg free
   862   0010FC  5016               	movf	normalizeColors@normRGB^0,w,c
   863   0010FE  6ED9               	movwf	fsr2l,c
   864   001100  6ADA               	clrf	fsr2h,c
   865   001102  0E04               	movlw	4
   866   001104  26D9               	addwf	fsr2l,f,c
   867   001106  C00E  FFDE         	movff	?___lwdiv,postinc2
   868   00110A  C00F  FFDD         	movff	?___lwdiv+1,postdec2
   869   00110E  0012               	return		;funcret
   870   001110                     __end_of_normalizeColors:
   871                           	callstack 0
   872                           
   873 ;; *************** function ___lwdiv *****************
   874 ;; Defined at:
   875 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
   876 ;; Parameters:    Size  Location     Type
   877 ;;  dividend        2   13[COMRAM] unsigned int 
   878 ;;  divisor         2   15[COMRAM] unsigned int 
   879 ;; Auto vars:     Size  Location     Type
   880 ;;  quotient        2   17[COMRAM] unsigned int 
   881 ;;  counter         1   19[COMRAM] unsigned char 
   882 ;; Return value:  Size  Location     Type
   883 ;;                  2   13[COMRAM] unsigned int 
   884 ;; Registers used:
   885 ;;		wreg, status,2, status,0
   886 ;; Tracked objects:
   887 ;;		On entry : 0/0
   888 ;;		On exit  : 0/0
   889 ;;		Unchanged: 0/0
   890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   891 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   892 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   894 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   895 ;;Total ram usage:        7 bytes
   896 ;; Hardware stack levels used: 1
   897 ;; Hardware stack levels required when called: 4
   898 ;; This function calls:
   899 ;;		Nothing
   900 ;; This function is called by:
   901 ;;		_normalizeColors
   902 ;; This function uses a non-reentrant model
   903 ;;
   904                           
   905                           	psect	text2
   906   0011F0                     __ptext2:
   907                           	callstack 0
   908   0011F0                     ___lwdiv:
   909                           	callstack 25
   910   0011F0  0E00               	movlw	0
   911   0011F2  6E13               	movwf	(___lwdiv@quotient+1)^0,c
   912   0011F4  0E00               	movlw	0
   913   0011F6  6E12               	movwf	___lwdiv@quotient^0,c
   914   0011F8  5010               	movf	___lwdiv@divisor^0,w,c
   915   0011FA  1011               	iorwf	(___lwdiv@divisor+1)^0,w,c
   916   0011FC  B4D8               	btfsc	status,2,c
   917   0011FE  EF03  F009         	goto	u331
   918   001202  EF05  F009         	goto	u330
   919   001206                     u331:
   920   001206  EF2D  F009         	goto	l785
   921   00120A                     u330:
   922   00120A  0E01               	movlw	1
   923   00120C  6E14               	movwf	___lwdiv@counter^0,c
   924   00120E  EF0D  F009         	goto	l1409
   925   001212                     l1407:
   926   001212  90D8               	bcf	status,0,c
   927   001214  3610               	rlcf	___lwdiv@divisor^0,f,c
   928   001216  3611               	rlcf	(___lwdiv@divisor+1)^0,f,c
   929   001218  2A14               	incf	___lwdiv@counter^0,f,c
   930   00121A                     l1409:
   931   00121A  AE11               	btfss	(___lwdiv@divisor+1)^0,7,c
   932   00121C  EF12  F009         	goto	u341
   933   001220  EF14  F009         	goto	u340
   934   001224                     u341:
   935   001224  EF09  F009         	goto	l1407
   936   001228                     u340:
   937   001228                     l1411:
   938   001228  90D8               	bcf	status,0,c
   939   00122A  3612               	rlcf	___lwdiv@quotient^0,f,c
   940   00122C  3613               	rlcf	(___lwdiv@quotient+1)^0,f,c
   941   00122E  5010               	movf	___lwdiv@divisor^0,w,c
   942   001230  5C0E               	subwf	___lwdiv@dividend^0,w,c
   943   001232  5011               	movf	(___lwdiv@divisor+1)^0,w,c
   944   001234  580F               	subwfb	(___lwdiv@dividend+1)^0,w,c
   945   001236  A0D8               	btfss	status,0,c
   946   001238  EF20  F009         	goto	u351
   947   00123C  EF22  F009         	goto	u350
   948   001240                     u351:
   949   001240  EF27  F009         	goto	l1419
   950   001244                     u350:
   951   001244  5010               	movf	___lwdiv@divisor^0,w,c
   952   001246  5E0E               	subwf	___lwdiv@dividend^0,f,c
   953   001248  5011               	movf	(___lwdiv@divisor+1)^0,w,c
   954   00124A  5A0F               	subwfb	(___lwdiv@dividend+1)^0,f,c
   955   00124C  8012               	bsf	___lwdiv@quotient^0,0,c
   956   00124E                     l1419:
   957   00124E  90D8               	bcf	status,0,c
   958   001250  3211               	rrcf	(___lwdiv@divisor+1)^0,f,c
   959   001252  3210               	rrcf	___lwdiv@divisor^0,f,c
   960   001254  2E14               	decfsz	___lwdiv@counter^0,f,c
   961   001256  EF14  F009         	goto	l1411
   962   00125A                     l785:
   963   00125A  C012  F00E         	movff	___lwdiv@quotient,?___lwdiv
   964   00125E  C013  F00F         	movff	___lwdiv@quotient+1,?___lwdiv+1
   965   001262  0012               	return		;funcret
   966   001264                     __end_of___lwdiv:
   967                           	callstack 0
   968                           
   969 ;; *************** function _interrupts_init *****************
   970 ;; Defined at:
   971 ;;		line 14 in file "interrupts.c"
   972 ;; Parameters:    Size  Location     Type
   973 ;;		None
   974 ;; Auto vars:     Size  Location     Type
   975 ;;		None
   976 ;; Return value:  Size  Location     Type
   977 ;;                  1    wreg      void 
   978 ;; Registers used:
   979 ;;		wreg, status,2, status,0, cstack
   980 ;; Tracked objects:
   981 ;;		On entry : 0/0
   982 ;;		On exit  : 0/0
   983 ;;		Unchanged: 0/0
   984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   989 ;;Total ram usage:        0 bytes
   990 ;; Hardware stack levels used: 1
   991 ;; Hardware stack levels required when called: 7
   992 ;; This function calls:
   993 ;;		_clearInterrupt
   994 ;;		_color_writetoaddr
   995 ;; This function is called by:
   996 ;;		_main
   997 ;; This function uses a non-reentrant model
   998 ;;
   999                           
  1000                           	psect	text3
  1001   001264                     __ptext3:
  1002                           	callstack 0
  1003   001264                     _interrupts_init:
  1004                           	callstack 23
  1005   001264                     
  1006                           ;interrupts.c: 21:     INT0PPS = 0x08;
  1007   001264  0E08               	movlw	8
  1008   001266  010D               	movlb	13	; () banked
  1009   001268  6FF0               	movwf	240,b	;volatile
  1010   00126A                     
  1011                           ; BSR set to: 13
  1012                           ;interrupts.c: 22:     PIE0bits.INT0IE = 1;
  1013   00126A  010E               	movlb	14	; () banked
  1014   00126C  8129               	bsf	41,0,b	;volatile
  1015   00126E                     
  1016                           ; BSR set to: 14
  1017                           ;interrupts.c: 23:     INTCONbits.INT0EDG = 0;
  1018   00126E  90F2               	bcf	242,0,c	;volatile
  1019   001270                     
  1020                           ; BSR set to: 14
  1021                           ;interrupts.c: 24:     IPR0bits.INT0IP = 0;
  1022   001270  911F               	bcf	31,0,b	;volatile
  1023   001272                     
  1024                           ; BSR set to: 14
  1025                           ;interrupts.c: 25:     ANSELBbits.ANSELB0 = 0;
  1026   001272  919A               	bcf	154,0,b	;volatile
  1027   001274                     
  1028                           ; BSR set to: 14
  1029                           ;interrupts.c: 27:     color_writetoaddr(0x04, 0x00);
  1030   001274  0E00               	movlw	0
  1031   001276  6E10               	movwf	color_writetoaddr@value^0,c
  1032   001278  0E04               	movlw	4
  1033   00127A  EC77  F00A         	call	_color_writetoaddr
  1034   00127E                     
  1035                           ;interrupts.c: 28:     color_writetoaddr(0x05, 0x01);
  1036   00127E  0E01               	movlw	1
  1037   001280  6E10               	movwf	color_writetoaddr@value^0,c
  1038   001282  0E05               	movlw	5
  1039   001284  EC77  F00A         	call	_color_writetoaddr
  1040   001288                     
  1041                           ;interrupts.c: 29:     color_writetoaddr(0x06, 0x1C0);
  1042   001288  0EC0               	movlw	192
  1043   00128A  6E10               	movwf	color_writetoaddr@value^0,c
  1044   00128C  0E06               	movlw	6
  1045   00128E  EC77  F00A         	call	_color_writetoaddr
  1046   001292                     
  1047                           ;interrupts.c: 30:     color_writetoaddr(0x07, 0b0000001);
  1048   001292  0E01               	movlw	1
  1049   001294  6E10               	movwf	color_writetoaddr@value^0,c
  1050   001296  0E07               	movlw	7
  1051   001298  EC77  F00A         	call	_color_writetoaddr
  1052   00129C                     
  1053                           ;interrupts.c: 32:     color_writetoaddr(0x0C, 0b0111);
  1054   00129C  0E07               	movlw	7
  1055   00129E  6E10               	movwf	color_writetoaddr@value^0,c
  1056   0012A0  0E0C               	movlw	12
  1057   0012A2  EC77  F00A         	call	_color_writetoaddr
  1058   0012A6                     
  1059                           ;interrupts.c: 35:     PIE0bits.TMR0IE = 1;
  1060   0012A6  010E               	movlb	14	; () banked
  1061   0012A8  8B29               	bsf	41,5,b	;volatile
  1062   0012AA                     
  1063                           ; BSR set to: 14
  1064                           ;interrupts.c: 36:     INTCONbits.PEIE=1;
  1065   0012AA  8CF2               	bsf	242,6,c	;volatile
  1066   0012AC                     
  1067                           ; BSR set to: 14
  1068                           ;interrupts.c: 53:     clearInterrupt();
  1069   0012AC  ECA0  F00A         	call	_clearInterrupt	;wreg free
  1070   0012B0                     
  1071                           ;interrupts.c: 56:     INTCONbits.GIE=1;
  1072   0012B0  8EF2               	bsf	242,7,c	;volatile
  1073   0012B2  0012               	return		;funcret
  1074   0012B4                     __end_of_interrupts_init:
  1075                           	callstack 0
  1076                           
  1077 ;; *************** function _clearInterrupt *****************
  1078 ;; Defined at:
  1079 ;;		line 146 in file "interrupts.c"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;		None
  1082 ;; Auto vars:     Size  Location     Type
  1083 ;;		None
  1084 ;; Return value:  Size  Location     Type
  1085 ;;                  1    wreg      void 
  1086 ;; Registers used:
  1087 ;;		wreg, status,2, status,0, cstack
  1088 ;; Tracked objects:
  1089 ;;		On entry : 0/0
  1090 ;;		On exit  : 0/0
  1091 ;;		Unchanged: 0/0
  1092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1097 ;;Total ram usage:        0 bytes
  1098 ;; Hardware stack levels used: 1
  1099 ;; Hardware stack levels required when called: 6
  1100 ;; This function calls:
  1101 ;;		_I2C_2_Master_Start
  1102 ;;		_I2C_2_Master_Stop
  1103 ;;		_I2C_2_Master_Write
  1104 ;; This function is called by:
  1105 ;;		_interrupts_init
  1106 ;; This function uses a non-reentrant model
  1107 ;;
  1108                           
  1109                           	psect	text4
  1110   001540                     __ptext4:
  1111                           	callstack 0
  1112   001540                     _clearInterrupt:
  1113                           	callstack 23
  1114   001540                     
  1115                           ;interrupts.c: 147:     I2C_2_Master_Start();
  1116   001540  ECD1  F00A         	call	_I2C_2_Master_Start	;wreg free
  1117                           
  1118                           ;interrupts.c: 148:     I2C_2_Master_Write(0x52 | 0x00);
  1119   001544  0E52               	movlw	82
  1120   001546  ECC0  F00A         	call	_I2C_2_Master_Write
  1121                           
  1122                           ;interrupts.c: 149:     I2C_2_Master_Write(0xe0 | 0x06 );
  1123   00154A  0EE6               	movlw	230
  1124   00154C  ECC0  F00A         	call	_I2C_2_Master_Write
  1125                           
  1126                           ;interrupts.c: 150:     I2C_2_Master_Stop();
  1127   001550  ECCC  F00A         	call	_I2C_2_Master_Stop	;wreg free
  1128   001554  0012               	return		;funcret
  1129   001556                     __end_of_clearInterrupt:
  1130                           	callstack 0
  1131                           
  1132 ;; *************** function _init_buttons_LED *****************
  1133 ;; Defined at:
  1134 ;;		line 6 in file "interact.c"
  1135 ;; Parameters:    Size  Location     Type
  1136 ;;		None
  1137 ;; Auto vars:     Size  Location     Type
  1138 ;;		None
  1139 ;; Return value:  Size  Location     Type
  1140 ;;                  1    wreg      void 
  1141 ;; Registers used:
  1142 ;;		None
  1143 ;; Tracked objects:
  1144 ;;		On entry : 0/0
  1145 ;;		On exit  : 0/0
  1146 ;;		Unchanged: 0/0
  1147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1152 ;;Total ram usage:        0 bytes
  1153 ;; Hardware stack levels used: 1
  1154 ;; Hardware stack levels required when called: 4
  1155 ;; This function calls:
  1156 ;;		Nothing
  1157 ;; This function is called by:
  1158 ;;		_main
  1159 ;; This function uses a non-reentrant model
  1160 ;;
  1161                           
  1162                           	psect	text5
  1163   00156C                     __ptext5:
  1164                           	callstack 0
  1165   00156C                     _init_buttons_LED:
  1166                           	callstack 26
  1167   00156C                     
  1168                           ;interact.c: 9:     TRISGbits.TRISG0 = 0;
  1169   00156C  9087               	bcf	135,0,c	;volatile
  1170                           
  1171                           ;interact.c: 10:     TRISEbits.TRISE7 = 0;
  1172   00156E  9E85               	bcf	133,7,c	;volatile
  1173                           
  1174                           ;interact.c: 11:     TRISAbits.TRISA3 = 0;
  1175   001570  9681               	bcf	129,3,c	;volatile
  1176                           
  1177                           ;interact.c: 12:     TRISDbits.TRISD3 = 0;
  1178   001572  9684               	bcf	132,3,c	;volatile
  1179                           
  1180                           ;interact.c: 13:     TRISHbits.TRISH1 = 0;
  1181   001574  9288               	bcf	136,1,c	;volatile
  1182                           
  1183                           ;interact.c: 14:     TRISDbits.TRISD4 = 0;
  1184   001576  9884               	bcf	132,4,c	;volatile
  1185                           
  1186                           ;interact.c: 17:     LATGbits.LATG0 = 0;
  1187   001578  907F               	bcf	127,0,c	;volatile
  1188                           
  1189                           ;interact.c: 18:     LATEbits.LATE7 = 0;
  1190   00157A  9E7D               	bcf	125,7,c	;volatile
  1191                           
  1192                           ;interact.c: 19:     LATAbits.LATA3 = 0;
  1193   00157C  9679               	bcf	121,3,c	;volatile
  1194   00157E  0012               	return		;funcret
  1195   001580                     __end_of_init_buttons_LED:
  1196                           	callstack 0
  1197                           
  1198 ;; *************** function _decideColor *****************
  1199 ;; Defined at:
  1200 ;;		line 160 in file "color.c"
  1201 ;; Parameters:    Size  Location     Type
  1202 ;;  normRGB         1   13[COMRAM] PTR struct normColors
  1203 ;;		 -> normRGB(6), 
  1204 ;; Auto vars:     Size  Location     Type
  1205 ;;		None
  1206 ;; Return value:  Size  Location     Type
  1207 ;;                  2   13[COMRAM] unsigned int 
  1208 ;; Registers used:
  1209 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1210 ;; Tracked objects:
  1211 ;;		On entry : 0/0
  1212 ;;		On exit  : 0/0
  1213 ;;		Unchanged: 0/0
  1214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1215 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1217 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1218 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1219 ;;Total ram usage:        4 bytes
  1220 ;; Hardware stack levels used: 1
  1221 ;; Hardware stack levels required when called: 4
  1222 ;; This function calls:
  1223 ;;		Nothing
  1224 ;; This function is called by:
  1225 ;;		_main
  1226 ;; This function uses a non-reentrant model
  1227 ;;
  1228                           
  1229                           	psect	text6
  1230   001110                     __ptext6:
  1231                           	callstack 0
  1232   001110                     _decideColor:
  1233                           	callstack 26
  1234   001110                     
  1235                           ;color.c: 162:     if (normRGB->normBlue > 18) {
  1236   001110  500E               	movf	decideColor@normRGB^0,w,c
  1237   001112  6ED9               	movwf	fsr2l,c
  1238   001114  6ADA               	clrf	fsr2h,c
  1239   001116  0E04               	movlw	4
  1240   001118  26D9               	addwf	fsr2l,f,c
  1241   00111A  0E01               	movlw	1
  1242   00111C  50DB               	movf	plusw2,w,c
  1243   00111E  E109               	bnz	u360
  1244   001120  0E13               	movlw	19
  1245   001122  5CDE               	subwf	postinc2,w,c
  1246   001124  A0D8               	btfss	status,0,c
  1247   001126  EF97  F008         	goto	u361
  1248   00112A  EF99  F008         	goto	u360
  1249   00112E                     u361:
  1250   00112E  EF9F  F008         	goto	l1491
  1251   001132                     u360:
  1252   001132                     
  1253                           ;color.c: 163:         return 2;
  1254   001132  0E00               	movlw	0
  1255   001134  6E0F               	movwf	(?_decideColor+1)^0,c
  1256   001136  0E02               	movlw	2
  1257   001138  6E0E               	movwf	?_decideColor^0,c
  1258   00113A  EFF7  F008         	goto	l62
  1259   00113E                     l1491:
  1260                           
  1261                           ;color.c: 165:     if (normRGB->normGreen > 40) {
  1262   00113E  500E               	movf	decideColor@normRGB^0,w,c
  1263   001140  6ED9               	movwf	fsr2l,c
  1264   001142  6ADA               	clrf	fsr2h,c
  1265   001144  0E02               	movlw	2
  1266   001146  26D9               	addwf	fsr2l,f,c
  1267   001148  0E01               	movlw	1
  1268   00114A  50DB               	movf	plusw2,w,c
  1269   00114C  E109               	bnz	u370
  1270   00114E  0E29               	movlw	41
  1271   001150  5CDE               	subwf	postinc2,w,c
  1272   001152  A0D8               	btfss	status,0,c
  1273   001154  EFAE  F008         	goto	u371
  1274   001158  EFB0  F008         	goto	u370
  1275   00115C                     u371:
  1276   00115C  EFB6  F008         	goto	l1499
  1277   001160                     u370:
  1278   001160                     
  1279                           ;color.c: 166:         return 1;
  1280   001160  0E00               	movlw	0
  1281   001162  6E0F               	movwf	(?_decideColor+1)^0,c
  1282   001164  0E01               	movlw	1
  1283   001166  6E0E               	movwf	?_decideColor^0,c
  1284   001168  EFF7  F008         	goto	l62
  1285   00116C                     l1499:
  1286                           
  1287                           ;color.c: 168:     if (normRGB->normRed > 55) {
  1288   00116C  500E               	movf	decideColor@normRGB^0,w,c
  1289   00116E  6ED9               	movwf	fsr2l,c
  1290   001170  6ADA               	clrf	fsr2h,c
  1291   001172  0E01               	movlw	1
  1292   001174  50DB               	movf	plusw2,w,c
  1293   001176  E109               	bnz	u380
  1294   001178  0E38               	movlw	56
  1295   00117A  5CDE               	subwf	postinc2,w,c
  1296   00117C  A0D8               	btfss	status,0,c
  1297   00117E  EFC3  F008         	goto	u381
  1298   001182  EFC5  F008         	goto	u380
  1299   001186                     u381:
  1300   001186  EFF3  F008         	goto	l1513
  1301   00118A                     u380:
  1302   00118A                     
  1303                           ;color.c: 170:         if (normRGB->normGreen > 30) {
  1304   00118A  500E               	movf	decideColor@normRGB^0,w,c
  1305   00118C  6ED9               	movwf	fsr2l,c
  1306   00118E  6ADA               	clrf	fsr2h,c
  1307   001190  0E02               	movlw	2
  1308   001192  26D9               	addwf	fsr2l,f,c
  1309   001194  0E01               	movlw	1
  1310   001196  50DB               	movf	plusw2,w,c
  1311   001198  E109               	bnz	u390
  1312   00119A  0E1F               	movlw	31
  1313   00119C  5CDE               	subwf	postinc2,w,c
  1314   00119E  A0D8               	btfss	status,0,c
  1315   0011A0  EFD4  F008         	goto	u391
  1316   0011A4  EFD6  F008         	goto	u390
  1317   0011A8                     u391:
  1318   0011A8  EFF3  F008         	goto	l1513
  1319   0011AC                     u390:
  1320   0011AC                     
  1321                           ;color.c: 171:             if (normRGB->normBlue > 12) {
  1322   0011AC  500E               	movf	decideColor@normRGB^0,w,c
  1323   0011AE  6ED9               	movwf	fsr2l,c
  1324   0011B0  6ADA               	clrf	fsr2h,c
  1325   0011B2  0E04               	movlw	4
  1326   0011B4  26D9               	addwf	fsr2l,f,c
  1327   0011B6  0E01               	movlw	1
  1328   0011B8  50DB               	movf	plusw2,w,c
  1329   0011BA  E109               	bnz	u400
  1330   0011BC  0E0D               	movlw	13
  1331   0011BE  5CDE               	subwf	postinc2,w,c
  1332   0011C0  A0D8               	btfss	status,0,c
  1333   0011C2  EFE5  F008         	goto	u401
  1334   0011C6  EFE7  F008         	goto	u400
  1335   0011CA                     u401:
  1336   0011CA  EFED  F008         	goto	l1509
  1337   0011CE                     u400:
  1338   0011CE                     
  1339                           ;color.c: 172:                 return 4;
  1340   0011CE  0E00               	movlw	0
  1341   0011D0  6E0F               	movwf	(?_decideColor+1)^0,c
  1342   0011D2  0E04               	movlw	4
  1343   0011D4  6E0E               	movwf	?_decideColor^0,c
  1344   0011D6  EFF7  F008         	goto	l62
  1345   0011DA                     l1509:
  1346                           
  1347                           ;color.c: 175:             return 3;
  1348   0011DA  0E00               	movlw	0
  1349   0011DC  6E0F               	movwf	(?_decideColor+1)^0,c
  1350   0011DE  0E03               	movlw	3
  1351   0011E0  6E0E               	movwf	?_decideColor^0,c
  1352   0011E2  EFF7  F008         	goto	l62
  1353   0011E6                     l1513:
  1354                           
  1355                           ;color.c: 177:         return 0;
  1356   0011E6  0E00               	movlw	0
  1357   0011E8  6E0F               	movwf	(?_decideColor+1)^0,c
  1358   0011EA  0E00               	movlw	0
  1359   0011EC  6E0E               	movwf	?_decideColor^0,c
  1360   0011EE                     l62:
  1361   0011EE  0012               	return		;funcret
  1362   0011F0                     __end_of_decideColor:
  1363                           	callstack 0
  1364                           
  1365 ;; *************** function _color_click_init *****************
  1366 ;; Defined at:
  1367 ;;		line 6 in file "color.c"
  1368 ;; Parameters:    Size  Location     Type
  1369 ;;		None
  1370 ;; Auto vars:     Size  Location     Type
  1371 ;;		None
  1372 ;; Return value:  Size  Location     Type
  1373 ;;                  1    wreg      void 
  1374 ;; Registers used:
  1375 ;;		wreg, status,2, status,0, cstack
  1376 ;; Tracked objects:
  1377 ;;		On entry : 0/0
  1378 ;;		On exit  : 0/0
  1379 ;;		Unchanged: 0/0
  1380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1383 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1384 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1385 ;;Total ram usage:        1 bytes
  1386 ;; Hardware stack levels used: 1
  1387 ;; Hardware stack levels required when called: 7
  1388 ;; This function calls:
  1389 ;;		_I2C_2_Master_Init
  1390 ;;		_color_writetoaddr
  1391 ;; This function is called by:
  1392 ;;		_main
  1393 ;; This function uses a non-reentrant model
  1394 ;;
  1395                           
  1396                           	psect	text7
  1397   001436                     __ptext7:
  1398                           	callstack 0
  1399   001436                     _color_click_init:
  1400                           	callstack 23
  1401   001436                     
  1402                           ;color.c: 9:     I2C_2_Master_Init();
  1403   001436  EC3A  F00A         	call	_I2C_2_Master_Init	;wreg free
  1404   00143A                     
  1405                           ;color.c: 13:  color_writetoaddr(0x00, 0x01);
  1406   00143A  0E01               	movlw	1
  1407   00143C  6E10               	movwf	color_writetoaddr@value^0,c
  1408   00143E  0E00               	movlw	0
  1409   001440  EC77  F00A         	call	_color_writetoaddr
  1410   001444                     
  1411                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
  1412   001444  0E3F               	movlw	63
  1413   001446  6E12               	movwf	??_color_click_init^0,c
  1414   001448  0E55               	movlw	85
  1415   00144A                     u627:
  1416   00144A  2EE8               	decfsz	wreg,f,c
  1417   00144C  D7FE               	bra	u627
  1418   00144E  2E12               	decfsz	??_color_click_init^0,f,c
  1419   001450  D7FC               	bra	u627
  1420   001452  0000               	nop	
  1421   001454                     
  1422                           ;color.c: 20:  color_writetoaddr(0x00, 0x03);
  1423   001454  0E03               	movlw	3
  1424   001456  6E10               	movwf	color_writetoaddr@value^0,c
  1425   001458  0E00               	movlw	0
  1426   00145A  EC77  F00A         	call	_color_writetoaddr
  1427   00145E                     
  1428                           ;color.c: 23:  color_writetoaddr(0x01, 0xF6);
  1429   00145E  0EF6               	movlw	246
  1430   001460  6E10               	movwf	color_writetoaddr@value^0,c
  1431   001462  0E01               	movlw	1
  1432   001464  EC77  F00A         	call	_color_writetoaddr
  1433   001468                     
  1434                           ;color.c: 30:     color_writetoaddr(0x00, 0x13);
  1435   001468  0E13               	movlw	19
  1436   00146A  6E10               	movwf	color_writetoaddr@value^0,c
  1437   00146C  0E00               	movlw	0
  1438   00146E  EC77  F00A         	call	_color_writetoaddr
  1439   001472  0012               	return		;funcret
  1440   001474                     __end_of_color_click_init:
  1441                           	callstack 0
  1442                           
  1443 ;; *************** function _color_writetoaddr *****************
  1444 ;; Defined at:
  1445 ;;		line 61 in file "color.c"
  1446 ;; Parameters:    Size  Location     Type
  1447 ;;  address         1    wreg     unsigned char 
  1448 ;;  value           1   15[COMRAM] unsigned char 
  1449 ;; Auto vars:     Size  Location     Type
  1450 ;;  address         1   16[COMRAM] unsigned char 
  1451 ;; Return value:  Size  Location     Type
  1452 ;;                  1    wreg      void 
  1453 ;; Registers used:
  1454 ;;		wreg, status,2, status,0, cstack
  1455 ;; Tracked objects:
  1456 ;;		On entry : 0/0
  1457 ;;		On exit  : 0/0
  1458 ;;		Unchanged: 0/0
  1459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1460 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1461 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1463 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1464 ;;Total ram usage:        2 bytes
  1465 ;; Hardware stack levels used: 1
  1466 ;; Hardware stack levels required when called: 6
  1467 ;; This function calls:
  1468 ;;		_I2C_2_Master_Start
  1469 ;;		_I2C_2_Master_Stop
  1470 ;;		_I2C_2_Master_Write
  1471 ;; This function is called by:
  1472 ;;		_color_click_init
  1473 ;;		_interrupts_init
  1474 ;; This function uses a non-reentrant model
  1475 ;;
  1476                           
  1477                           	psect	text8
  1478   0014EE                     __ptext8:
  1479                           	callstack 0
  1480   0014EE                     _color_writetoaddr:
  1481                           	callstack 23
  1482                           
  1483                           ;incstack = 0
  1484                           ;color_writetoaddr@address stored from wreg
  1485   0014EE  6E11               	movwf	color_writetoaddr@address^0,c
  1486   0014F0                     
  1487                           ;color.c: 62:     I2C_2_Master_Start();
  1488   0014F0  ECD1  F00A         	call	_I2C_2_Master_Start	;wreg free
  1489                           
  1490                           ;color.c: 63:     I2C_2_Master_Write(0x52 | 0x00);
  1491   0014F4  0E52               	movlw	82
  1492   0014F6  ECC0  F00A         	call	_I2C_2_Master_Write
  1493                           
  1494                           ;color.c: 64:     I2C_2_Master_Write(0x80 | address);
  1495   0014FA  5011               	movf	color_writetoaddr@address^0,w,c
  1496   0014FC  0980               	iorlw	128
  1497   0014FE  ECC0  F00A         	call	_I2C_2_Master_Write
  1498                           
  1499                           ;color.c: 65:     I2C_2_Master_Write(value);
  1500   001502  5010               	movf	color_writetoaddr@value^0,w,c
  1501   001504  ECC0  F00A         	call	_I2C_2_Master_Write
  1502                           
  1503                           ;color.c: 66:     I2C_2_Master_Stop();
  1504   001508  ECCC  F00A         	call	_I2C_2_Master_Stop	;wreg free
  1505   00150C  0012               	return		;funcret
  1506   00150E                     __end_of_color_writetoaddr:
  1507                           	callstack 0
  1508                           
  1509 ;; *************** function _I2C_2_Master_Write *****************
  1510 ;; Defined at:
  1511 ;;		line 45 in file "i2c.c"
  1512 ;; Parameters:    Size  Location     Type
  1513 ;;  data_byte       1    wreg     unsigned char 
  1514 ;; Auto vars:     Size  Location     Type
  1515 ;;  data_byte       1   14[COMRAM] unsigned char 
  1516 ;; Return value:  Size  Location     Type
  1517 ;;                  1    wreg      void 
  1518 ;; Registers used:
  1519 ;;		wreg, status,2, status,0, cstack
  1520 ;; Tracked objects:
  1521 ;;		On entry : 0/0
  1522 ;;		On exit  : 0/0
  1523 ;;		Unchanged: 0/0
  1524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1526 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1528 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1529 ;;Total ram usage:        1 bytes
  1530 ;; Hardware stack levels used: 1
  1531 ;; Hardware stack levels required when called: 5
  1532 ;; This function calls:
  1533 ;;		_I2C_2_Master_Idle
  1534 ;; This function is called by:
  1535 ;;		_color_writetoaddr
  1536 ;;		_clearInterrupt
  1537 ;;		_color_readdoublefromaddress
  1538 ;;		_color_readfromaddress
  1539 ;; This function uses a non-reentrant model
  1540 ;;
  1541                           
  1542                           	psect	text9
  1543   001580                     __ptext9:
  1544                           	callstack 0
  1545   001580                     _I2C_2_Master_Write:
  1546                           	callstack 23
  1547                           
  1548                           ;incstack = 0
  1549                           ;I2C_2_Master_Write@data_byte stored from wreg
  1550   001580  6E0F               	movwf	I2C_2_Master_Write@data_byte^0,c
  1551   001582                     
  1552                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  1553   001582  EC4F  F00A         	call	_I2C_2_Master_Idle	;wreg free
  1554   001586                     
  1555                           ;i2c.c: 48:   SSP2BUF = data_byte;
  1556   001586  C00F  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  1557   00158A  0012               	return		;funcret
  1558   00158C                     __end_of_I2C_2_Master_Write:
  1559                           	callstack 0
  1560                           
  1561 ;; *************** function _I2C_2_Master_Stop *****************
  1562 ;; Defined at:
  1563 ;;		line 39 in file "i2c.c"
  1564 ;; Parameters:    Size  Location     Type
  1565 ;;		None
  1566 ;; Auto vars:     Size  Location     Type
  1567 ;;		None
  1568 ;; Return value:  Size  Location     Type
  1569 ;;                  1    wreg      void 
  1570 ;; Registers used:
  1571 ;;		wreg, status,2, status,0, cstack
  1572 ;; Tracked objects:
  1573 ;;		On entry : 0/0
  1574 ;;		On exit  : 0/0
  1575 ;;		Unchanged: 0/0
  1576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1581 ;;Total ram usage:        0 bytes
  1582 ;; Hardware stack levels used: 1
  1583 ;; Hardware stack levels required when called: 5
  1584 ;; This function calls:
  1585 ;;		_I2C_2_Master_Idle
  1586 ;; This function is called by:
  1587 ;;		_color_writetoaddr
  1588 ;;		_clearInterrupt
  1589 ;;		_color_readdoublefromaddress
  1590 ;; This function uses a non-reentrant model
  1591 ;;
  1592                           
  1593                           	psect	text10
  1594   001598                     __ptext10:
  1595                           	callstack 0
  1596   001598                     _I2C_2_Master_Stop:
  1597                           	callstack 23
  1598   001598                     
  1599                           ;i2c.c: 41:   I2C_2_Master_Idle();
  1600   001598  EC4F  F00A         	call	_I2C_2_Master_Idle	;wreg free
  1601   00159C                     
  1602                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  1603   00159C  010E               	movlb	14	; () banked
  1604   00159E  85DA               	bsf	218,2,b	;volatile
  1605   0015A0                     
  1606                           ; BSR set to: 14
  1607   0015A0  0012               	return		;funcret
  1608   0015A2                     __end_of_I2C_2_Master_Stop:
  1609                           	callstack 0
  1610                           
  1611 ;; *************** function _I2C_2_Master_Start *****************
  1612 ;; Defined at:
  1613 ;;		line 27 in file "i2c.c"
  1614 ;; Parameters:    Size  Location     Type
  1615 ;;		None
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;		None
  1618 ;; Return value:  Size  Location     Type
  1619 ;;                  1    wreg      void 
  1620 ;; Registers used:
  1621 ;;		wreg, status,2, status,0, cstack
  1622 ;; Tracked objects:
  1623 ;;		On entry : 0/0
  1624 ;;		On exit  : 0/0
  1625 ;;		Unchanged: 0/0
  1626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1631 ;;Total ram usage:        0 bytes
  1632 ;; Hardware stack levels used: 1
  1633 ;; Hardware stack levels required when called: 5
  1634 ;; This function calls:
  1635 ;;		_I2C_2_Master_Idle
  1636 ;; This function is called by:
  1637 ;;		_color_writetoaddr
  1638 ;;		_clearInterrupt
  1639 ;;		_color_readdoublefromaddress
  1640 ;;		_color_readfromaddress
  1641 ;; This function uses a non-reentrant model
  1642 ;;
  1643                           
  1644                           	psect	text11
  1645   0015A2                     __ptext11:
  1646                           	callstack 0
  1647   0015A2                     _I2C_2_Master_Start:
  1648                           	callstack 23
  1649   0015A2                     
  1650                           ;i2c.c: 29:   I2C_2_Master_Idle();
  1651   0015A2  EC4F  F00A         	call	_I2C_2_Master_Idle	;wreg free
  1652   0015A6                     
  1653                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  1654   0015A6  010E               	movlb	14	; () banked
  1655   0015A8  81DA               	bsf	218,0,b	;volatile
  1656   0015AA                     
  1657                           ; BSR set to: 14
  1658   0015AA  0012               	return		;funcret
  1659   0015AC                     __end_of_I2C_2_Master_Start:
  1660                           	callstack 0
  1661                           
  1662 ;; *************** function _I2C_2_Master_Idle *****************
  1663 ;; Defined at:
  1664 ;;		line 22 in file "i2c.c"
  1665 ;; Parameters:    Size  Location     Type
  1666 ;;		None
  1667 ;; Auto vars:     Size  Location     Type
  1668 ;;		None
  1669 ;; Return value:  Size  Location     Type
  1670 ;;                  1    wreg      void 
  1671 ;; Registers used:
  1672 ;;		wreg, status,2, status,0
  1673 ;; Tracked objects:
  1674 ;;		On entry : 0/0
  1675 ;;		On exit  : 0/0
  1676 ;;		Unchanged: 0/0
  1677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1680 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1681 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1682 ;;Total ram usage:        1 bytes
  1683 ;; Hardware stack levels used: 1
  1684 ;; Hardware stack levels required when called: 4
  1685 ;; This function calls:
  1686 ;;		Nothing
  1687 ;; This function is called by:
  1688 ;;		_I2C_2_Master_Start
  1689 ;;		_I2C_2_Master_Stop
  1690 ;;		_I2C_2_Master_Write
  1691 ;; This function uses a non-reentrant model
  1692 ;;
  1693                           
  1694                           	psect	text12
  1695   00149E                     __ptext12:
  1696                           	callstack 0
  1697   00149E                     _I2C_2_Master_Idle:
  1698                           	callstack 23
  1699   00149E                     l97:
  1700   00149E  010E               	movlb	14	; () banked
  1701   0014A0  B5D8               	btfsc	216,2,b	;volatile
  1702   0014A2  EF55  F00A         	goto	u11
  1703   0014A6  EF57  F00A         	goto	u10
  1704   0014AA                     u11:
  1705   0014AA  EF4F  F00A         	goto	l97
  1706   0014AE                     u10:
  1707   0014AE                     
  1708                           ; BSR set to: 14
  1709   0014AE  CEDA F00E          	movff	3802,??_I2C_2_Master_Idle	;volatile
  1710   0014B2  0E1F               	movlw	31
  1711   0014B4  160E               	andwf	??_I2C_2_Master_Idle^0,f,c
  1712   0014B6  A4D8               	btfss	status,2,c
  1713   0014B8  EF60  F00A         	goto	u21
  1714   0014BC  EF62  F00A         	goto	u20
  1715   0014C0                     u21:
  1716   0014C0  EF4F  F00A         	goto	l97
  1717   0014C4                     u20:
  1718   0014C4                     
  1719                           ; BSR set to: 14
  1720   0014C4  0012               	return		;funcret
  1721   0014C6                     __end_of_I2C_2_Master_Idle:
  1722                           	callstack 0
  1723                           
  1724 ;; *************** function _I2C_2_Master_Init *****************
  1725 ;; Defined at:
  1726 ;;		line 4 in file "i2c.c"
  1727 ;; Parameters:    Size  Location     Type
  1728 ;;		None
  1729 ;; Auto vars:     Size  Location     Type
  1730 ;;		None
  1731 ;; Return value:  Size  Location     Type
  1732 ;;                  1    wreg      void 
  1733 ;; Registers used:
  1734 ;;		wreg, status,2
  1735 ;; Tracked objects:
  1736 ;;		On entry : 0/0
  1737 ;;		On exit  : 0/0
  1738 ;;		Unchanged: 0/0
  1739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1744 ;;Total ram usage:        0 bytes
  1745 ;; Hardware stack levels used: 1
  1746 ;; Hardware stack levels required when called: 4
  1747 ;; This function calls:
  1748 ;;		Nothing
  1749 ;; This function is called by:
  1750 ;;		_color_click_init
  1751 ;; This function uses a non-reentrant model
  1752 ;;
  1753                           
  1754                           	psect	text13
  1755   001474                     __ptext13:
  1756                           	callstack 0
  1757   001474                     _I2C_2_Master_Init:
  1758                           	callstack 25
  1759   001474                     
  1760                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  1761   001474  010E               	movlb	14	; () banked
  1762   001476  51D9               	movf	217,w,b	;volatile
  1763   001478  0BF0               	andlw	-16
  1764   00147A  0908               	iorlw	8
  1765   00147C  6FD9               	movwf	217,b	;volatile
  1766   00147E                     
  1767                           ; BSR set to: 14
  1768                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  1769   00147E  8BD9               	bsf	217,5,b	;volatile
  1770                           
  1771                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  1772   001480  0E9F               	movlw	159
  1773   001482  6FD6               	movwf	214,b	;volatile
  1774   001484                     
  1775                           ; BSR set to: 14
  1776                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  1777   001484  8A84               	bsf	132,5,c	;volatile
  1778   001486                     
  1779                           ; BSR set to: 14
  1780                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  1781   001486  8C84               	bsf	132,6,c	;volatile
  1782   001488                     
  1783                           ; BSR set to: 14
  1784                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  1785   001488  9BA7               	bcf	167,5,b	;volatile
  1786   00148A                     
  1787                           ; BSR set to: 14
  1788                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  1789   00148A  9DA7               	bcf	167,6,b	;volatile
  1790                           
  1791                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  1792   00148C  0E1D               	movlw	29
  1793   00148E  6F1D               	movwf	29,b	;volatile
  1794                           
  1795                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  1796   001490  0E1E               	movlw	30
  1797   001492  6F1C               	movwf	28,b	;volatile
  1798                           
  1799                           ;i2c.c: 18:   RD5PPS=0x1C;
  1800   001494  0E1C               	movlw	28
  1801   001496  6F6F               	movwf	111,b	;volatile
  1802                           
  1803                           ;i2c.c: 19:   RD6PPS=0x1B;
  1804   001498  0E1B               	movlw	27
  1805   00149A  6F70               	movwf	112,b	;volatile
  1806   00149C                     
  1807                           ; BSR set to: 14
  1808   00149C  0012               	return		;funcret
  1809   00149E                     __end_of_I2C_2_Master_Init:
  1810                           	callstack 0
  1811                           
  1812 ;; *************** function _Timer0_init *****************
  1813 ;; Defined at:
  1814 ;;		line 60 in file "interrupts.c"
  1815 ;; Parameters:    Size  Location     Type
  1816 ;;		None
  1817 ;; Auto vars:     Size  Location     Type
  1818 ;;		None
  1819 ;; Return value:  Size  Location     Type
  1820 ;;                  1    wreg      void 
  1821 ;; Registers used:
  1822 ;;		wreg, status,2
  1823 ;; Tracked objects:
  1824 ;;		On entry : 0/0
  1825 ;;		On exit  : 0/0
  1826 ;;		Unchanged: 0/0
  1827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1832 ;;Total ram usage:        0 bytes
  1833 ;; Hardware stack levels used: 1
  1834 ;; Hardware stack levels required when called: 4
  1835 ;; This function calls:
  1836 ;;		Nothing
  1837 ;; This function is called by:
  1838 ;;		_main
  1839 ;; This function uses a non-reentrant model
  1840 ;;
  1841                           
  1842                           	psect	text14
  1843   00150E                     __ptext14:
  1844                           	callstack 0
  1845   00150E                     _Timer0_init:
  1846                           	callstack 26
  1847   00150E                     
  1848                           ;interrupts.c: 62:     T0CON1bits.T0CS=0b010;
  1849   00150E  50D6               	movf	214,w,c	;volatile
  1850   001510  0B1F               	andlw	-225
  1851   001512  0940               	iorlw	64
  1852   001514  6ED6               	movwf	214,c	;volatile
  1853   001516                     
  1854                           ;interrupts.c: 63:     T0CON1bits.T0ASYNC=1;
  1855   001516  88D6               	bsf	214,4,c	;volatile
  1856                           
  1857                           ;interrupts.c: 64:     T0CON1bits.T0CKPS=0b0000;
  1858   001518  0EF0               	movlw	-16
  1859   00151A  16D6               	andwf	214,f,c	;volatile
  1860   00151C                     
  1861                           ;interrupts.c: 65:     T0CON0bits.T016BIT=1;
  1862   00151C  88D5               	bsf	213,4,c	;volatile
  1863                           
  1864                           ;interrupts.c: 78:     TMR0H=0;
  1865   00151E  0E00               	movlw	0
  1866   001520  6ED4               	movwf	212,c	;volatile
  1867                           
  1868                           ;interrupts.c: 79:     TMR0L=3036;
  1869   001522  0EDC               	movlw	220
  1870   001524  6ED3               	movwf	211,c	;volatile
  1871   001526                     
  1872                           ;interrupts.c: 80:     T0CON0bits.T0EN=1;
  1873   001526  8ED5               	bsf	213,7,c	;volatile
  1874   001528  0012               	return		;funcret
  1875   00152A                     __end_of_Timer0_init:
  1876                           	callstack 0
  1877                           
  1878 ;; *************** function _LEDturnON *****************
  1879 ;; Defined at:
  1880 ;;		line 23 in file "interact.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;		None
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;		None
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  1    wreg      void 
  1887 ;; Registers used:
  1888 ;;		None
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1898 ;;Total ram usage:        0 bytes
  1899 ;; Hardware stack levels used: 1
  1900 ;; Hardware stack levels required when called: 4
  1901 ;; This function calls:
  1902 ;;		Nothing
  1903 ;; This function is called by:
  1904 ;;		_main
  1905 ;;		_readColors
  1906 ;; This function uses a non-reentrant model
  1907 ;;
  1908                           
  1909                           	psect	text15
  1910   0015AC                     __ptext15:
  1911                           	callstack 0
  1912   0015AC                     _LEDturnON:
  1913                           	callstack 26
  1914   0015AC                     
  1915                           ;interact.c: 24:     LATDbits.LATD3 = 1;
  1916   0015AC  867C               	bsf	124,3,c	;volatile
  1917                           
  1918                           ;interact.c: 27:     LATGbits.LATG0 = 1;
  1919   0015AE  807F               	bsf	127,0,c	;volatile
  1920                           
  1921                           ;interact.c: 28:     LATEbits.LATE7 = 1;
  1922   0015B0  8E7D               	bsf	125,7,c	;volatile
  1923                           
  1924                           ;interact.c: 29:     LATAbits.LATA3 = 1;
  1925   0015B2  8679               	bsf	121,3,c	;volatile
  1926   0015B4  0012               	return		;funcret
  1927   0015B6                     __end_of_LEDturnON:
  1928                           	callstack 0
  1929                           
  1930 ;; *************** function _High_ISR *****************
  1931 ;; Defined at:
  1932 ;;		line 83 in file "interrupts.c"
  1933 ;; Parameters:    Size  Location     Type
  1934 ;;		None
  1935 ;; Auto vars:     Size  Location     Type
  1936 ;;		None
  1937 ;; Return value:  Size  Location     Type
  1938 ;;                  1    wreg      void 
  1939 ;; Registers used:
  1940 ;;		wreg, status,2, status,0, cstack
  1941 ;; Tracked objects:
  1942 ;;		On entry : 0/0
  1943 ;;		On exit  : 0/0
  1944 ;;		Unchanged: 0/0
  1945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1948 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1949 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1950 ;;Total ram usage:        2 bytes
  1951 ;; Hardware stack levels used: 1
  1952 ;; Hardware stack levels required when called: 3
  1953 ;; This function calls:
  1954 ;;		_LEDturnOFF
  1955 ;;		_readBlueColor
  1956 ;;		_readClearColor
  1957 ;;		_readGreenColor
  1958 ;;		_readRedColor
  1959 ;;		i2_clearInterrupt
  1960 ;; This function is called by:
  1961 ;;		Interrupt level 2
  1962 ;; This function uses a non-reentrant model
  1963 ;;
  1964                           
  1965                           	psect	intcode
  1966   000008                     __pintcode:
  1967                           	callstack 0
  1968   000008                     _High_ISR:
  1969                           	callstack 23
  1970                           
  1971                           ;incstack = 0
  1972   000008  824E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1973   00000A                     
  1974                           ;interrupts.c: 84:     if (PIR0bits.INT0IF) {
  1975   00000A  010E               	movlb	14	; () banked
  1976   00000C  A133               	btfss	51,0,b	;volatile
  1977   00000E  EF0B  F000         	goto	i2u50_41
  1978   000012  EF0D  F000         	goto	i2u50_40
  1979   000016                     i2u50_41:
  1980   000016  EF8F  F000         	goto	i2l1731
  1981   00001A                     i2u50_40:
  1982   00001A                     
  1983                           ; BSR set to: 14
  1984                           ;interrupts.c: 92:         if (wall_detected==0) {
  1985   00001A  503F               	movf	_wall_detected^0,w,c
  1986   00001C  A4D8               	btfss	status,2,c
  1987   00001E  EF13  F000         	goto	i2u51_41
  1988   000022  EF15  F000         	goto	i2u51_40
  1989   000026                     i2u51_41:
  1990   000026  EF8B  F000         	goto	i2l1727
  1991   00002A                     i2u51_40:
  1992   00002A                     
  1993                           ; BSR set to: 14
  1994                           ;interrupts.c: 93:             RGBC.clear = readClearColor();
  1995   00002A  ECAA  F009         	call	_readClearColor	;wreg free
  1996   00002E  C005  F046         	movff	?_readClearColor,_RGBC+6
  1997   000032  C006  F047         	movff	?_readClearColor+1,_RGBC+7
  1998   000036                     
  1999                           ;interrupts.c: 94:             LEDturnOFF();
  2000   000036  ECEA  F00A         	call	_LEDturnOFF	;wreg free
  2001   00003A                     
  2002                           ;interrupts.c: 95:             LATGbits.LATG0 = 1;
  2003   00003A  807F               	bsf	127,0,c	;volatile
  2004   00003C                     
  2005                           ;interrupts.c: 96:             _delay((unsigned long)((100)*(64000000/4000.0)));
  2006   00003C  0E09               	movlw	9
  2007   00003E  6E0D               	movwf	(??_High_ISR+1)^0,c
  2008   000040  0E1E               	movlw	30
  2009   000042  6E0C               	movwf	??_High_ISR^0,c
  2010   000044  0EE4               	movlw	228
  2011   000046                     i2u63_47:
  2012   000046  2EE8               	decfsz	wreg,f,c
  2013   000048  D7FE               	bra	i2u63_47
  2014   00004A  2E0C               	decfsz	??_High_ISR^0,f,c
  2015   00004C  D7FC               	bra	i2u63_47
  2016   00004E  2E0D               	decfsz	(??_High_ISR+1)^0,f,c
  2017   000050  D7FA               	bra	i2u63_47
  2018   000052  D000               	nop2	
  2019   000054                     
  2020                           ;interrupts.c: 97:             RGBC.red = readRedColor();
  2021   000054  EC5A  F009         	call	_readRedColor	;wreg free
  2022   000058  C005  F040         	movff	?_readRedColor,_RGBC
  2023   00005C  C006  F041         	movff	?_readRedColor+1,_RGBC+1
  2024   000060                     
  2025                           ;interrupts.c: 98:             _delay((unsigned long)((100)*(64000000/4000.0)));
  2026   000060  0E09               	movlw	9
  2027   000062  6E0D               	movwf	(??_High_ISR+1)^0,c
  2028   000064  0E1E               	movlw	30
  2029   000066  6E0C               	movwf	??_High_ISR^0,c
  2030   000068  0EE4               	movlw	228
  2031   00006A                     i2u64_47:
  2032   00006A  2EE8               	decfsz	wreg,f,c
  2033   00006C  D7FE               	bra	i2u64_47
  2034   00006E  2E0C               	decfsz	??_High_ISR^0,f,c
  2035   000070  D7FC               	bra	i2u64_47
  2036   000072  2E0D               	decfsz	(??_High_ISR+1)^0,f,c
  2037   000074  D7FA               	bra	i2u64_47
  2038   000076  D000               	nop2	
  2039   000078                     
  2040                           ;interrupts.c: 99:             LATGbits.LATG0 = 0;
  2041   000078  907F               	bcf	127,0,c	;volatile
  2042   00007A                     
  2043                           ;interrupts.c: 100:             LATEbits.LATE7 = 1;
  2044   00007A  8E7D               	bsf	125,7,c	;volatile
  2045   00007C                     
  2046                           ;interrupts.c: 101:             _delay((unsigned long)((100)*(64000000/4000.0)));
  2047   00007C  0E09               	movlw	9
  2048   00007E  6E0D               	movwf	(??_High_ISR+1)^0,c
  2049   000080  0E1E               	movlw	30
  2050   000082  6E0C               	movwf	??_High_ISR^0,c
  2051   000084  0EE4               	movlw	228
  2052   000086                     i2u65_47:
  2053   000086  2EE8               	decfsz	wreg,f,c
  2054   000088  D7FE               	bra	i2u65_47
  2055   00008A  2E0C               	decfsz	??_High_ISR^0,f,c
  2056   00008C  D7FC               	bra	i2u65_47
  2057   00008E  2E0D               	decfsz	(??_High_ISR+1)^0,f,c
  2058   000090  D7FA               	bra	i2u65_47
  2059   000092  D000               	nop2	
  2060   000094                     
  2061                           ;interrupts.c: 102:             RGBC.green = readGreenColor();
  2062   000094  EC82  F009         	call	_readGreenColor	;wreg free
  2063   000098  C005  F042         	movff	?_readGreenColor,_RGBC+2
  2064   00009C  C006  F043         	movff	?_readGreenColor+1,_RGBC+3
  2065   0000A0                     
  2066                           ;interrupts.c: 103:             _delay((unsigned long)((100)*(64000000/4000.0)));
  2067   0000A0  0E09               	movlw	9
  2068   0000A2  6E0D               	movwf	(??_High_ISR+1)^0,c
  2069   0000A4  0E1E               	movlw	30
  2070   0000A6  6E0C               	movwf	??_High_ISR^0,c
  2071   0000A8  0EE4               	movlw	228
  2072   0000AA                     i2u66_47:
  2073   0000AA  2EE8               	decfsz	wreg,f,c
  2074   0000AC  D7FE               	bra	i2u66_47
  2075   0000AE  2E0C               	decfsz	??_High_ISR^0,f,c
  2076   0000B0  D7FC               	bra	i2u66_47
  2077   0000B2  2E0D               	decfsz	(??_High_ISR+1)^0,f,c
  2078   0000B4  D7FA               	bra	i2u66_47
  2079   0000B6  D000               	nop2	
  2080   0000B8                     
  2081                           ;interrupts.c: 104:             LATEbits.LATE7 = 0;
  2082   0000B8  9E7D               	bcf	125,7,c	;volatile
  2083   0000BA                     
  2084                           ;interrupts.c: 105:             LATAbits.LATA3 = 1;
  2085   0000BA  8679               	bsf	121,3,c	;volatile
  2086   0000BC                     
  2087                           ;interrupts.c: 106:             _delay((unsigned long)((100)*(64000000/4000.0)));
  2088   0000BC  0E09               	movlw	9
  2089   0000BE  6E0D               	movwf	(??_High_ISR+1)^0,c
  2090   0000C0  0E1E               	movlw	30
  2091   0000C2  6E0C               	movwf	??_High_ISR^0,c
  2092   0000C4  0EE4               	movlw	228
  2093   0000C6                     i2u67_47:
  2094   0000C6  2EE8               	decfsz	wreg,f,c
  2095   0000C8  D7FE               	bra	i2u67_47
  2096   0000CA  2E0C               	decfsz	??_High_ISR^0,f,c
  2097   0000CC  D7FC               	bra	i2u67_47
  2098   0000CE  2E0D               	decfsz	(??_High_ISR+1)^0,f,c
  2099   0000D0  D7FA               	bra	i2u67_47
  2100   0000D2  D000               	nop2	
  2101   0000D4                     
  2102                           ;interrupts.c: 107:             RGBC.blue = readBlueColor();
  2103   0000D4  ECD2  F009         	call	_readBlueColor	;wreg free
  2104   0000D8  C005  F044         	movff	?_readBlueColor,_RGBC+4
  2105   0000DC  C006  F045         	movff	?_readBlueColor+1,_RGBC+5
  2106   0000E0                     
  2107                           ;interrupts.c: 108:             _delay((unsigned long)((100)*(64000000/4000.0)));
  2108   0000E0  0E09               	movlw	9
  2109   0000E2  6E0D               	movwf	(??_High_ISR+1)^0,c
  2110   0000E4  0E1E               	movlw	30
  2111   0000E6  6E0C               	movwf	??_High_ISR^0,c
  2112   0000E8  0EE4               	movlw	228
  2113   0000EA                     i2u68_47:
  2114   0000EA  2EE8               	decfsz	wreg,f,c
  2115   0000EC  D7FE               	bra	i2u68_47
  2116   0000EE  2E0C               	decfsz	??_High_ISR^0,f,c
  2117   0000F0  D7FC               	bra	i2u68_47
  2118   0000F2  2E0D               	decfsz	(??_High_ISR+1)^0,f,c
  2119   0000F4  D7FA               	bra	i2u68_47
  2120   0000F6  D000               	nop2	
  2121   0000F8                     
  2122                           ;interrupts.c: 109:             LATAbits.LATA3 = 0;
  2123   0000F8  9679               	bcf	121,3,c	;volatile
  2124   0000FA                     
  2125                           ;interrupts.c: 111:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  2126   0000FA  0E52               	movlw	82
  2127   0000FC  6E0D               	movwf	(??_High_ISR+1)^0,c
  2128   0000FE  0E2B               	movlw	43
  2129   000100  6E0C               	movwf	??_High_ISR^0,c
  2130   000102  0E00               	movlw	0
  2131   000104                     i2u69_47:
  2132   000104  2EE8               	decfsz	wreg,f,c
  2133   000106  D7FE               	bra	i2u69_47
  2134   000108  2E0C               	decfsz	??_High_ISR^0,f,c
  2135   00010A  D7FC               	bra	i2u69_47
  2136   00010C  2E0D               	decfsz	(??_High_ISR+1)^0,f,c
  2137   00010E  D7FA               	bra	i2u69_47
  2138   000110  D000               	nop2	
  2139   000112                     
  2140                           ;interrupts.c: 112:             wall_detected = 1;
  2141   000112  0E01               	movlw	1
  2142   000114  6E3F               	movwf	_wall_detected^0,c
  2143   000116                     i2l1727:
  2144                           
  2145                           ;interrupts.c: 116:         clearInterrupt();
  2146   000116  ECAB  F00A         	call	i2_clearInterrupt	;wreg free
  2147   00011A                     
  2148                           ;interrupts.c: 118:         PIR0bits.INT0IF = 0;
  2149   00011A  010E               	movlb	14	; () banked
  2150   00011C  9133               	bcf	51,0,b	;volatile
  2151   00011E                     i2l1731:
  2152                           
  2153                           ; BSR set to: 14
  2154                           ;interrupts.c: 121:     if (PIR0bits.TMR0IF) {
  2155   00011E  AB33               	btfss	51,5,b	;volatile
  2156   000120  EF94  F000         	goto	i2u52_41
  2157   000124  EF96  F000         	goto	i2u52_40
  2158   000128                     i2u52_41:
  2159   000128  EF99  F000         	goto	i2l283
  2160   00012C                     i2u52_40:
  2161   00012C                     
  2162                           ; BSR set to: 14
  2163                           ;interrupts.c: 122:         PIR0bits.TMR0IF = 0;
  2164   00012C  9B33               	bcf	51,5,b	;volatile
  2165   00012E                     
  2166                           ; BSR set to: 14
  2167                           ;interrupts.c: 123:         increment++;
  2168   00012E  4A35               	infsnz	_increment^0,f,c
  2169   000130  2A36               	incf	(_increment+1)^0,f,c
  2170   000132                     i2l283:
  2171                           
  2172                           ; BSR set to: 14
  2173   000132  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2174   000134  0011               	retfie		f
  2175   000136                     __end_of_High_ISR:
  2176                           	callstack 0
  2177                           
  2178 ;; *************** function i2_clearInterrupt *****************
  2179 ;; Defined at:
  2180 ;;		line 146 in file "interrupts.c"
  2181 ;; Parameters:    Size  Location     Type
  2182 ;;		None
  2183 ;; Auto vars:     Size  Location     Type
  2184 ;;		None
  2185 ;; Return value:  Size  Location     Type
  2186 ;;                  1    wreg      void 
  2187 ;; Registers used:
  2188 ;;		wreg, status,2, status,0, cstack
  2189 ;; Tracked objects:
  2190 ;;		On entry : 0/0
  2191 ;;		On exit  : 0/0
  2192 ;;		Unchanged: 0/0
  2193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2198 ;;Total ram usage:        0 bytes
  2199 ;; Hardware stack levels used: 1
  2200 ;; Hardware stack levels required when called: 2
  2201 ;; This function calls:
  2202 ;;		i2_I2C_2_Master_Start
  2203 ;;		i2_I2C_2_Master_Stop
  2204 ;;		i2_I2C_2_Master_Write
  2205 ;; This function is called by:
  2206 ;;		_High_ISR
  2207 ;; This function uses a non-reentrant model
  2208 ;;
  2209                           
  2210                           	psect	text17
  2211   001556                     __ptext17:
  2212                           	callstack 0
  2213   001556                     i2_clearInterrupt:
  2214                           	callstack 23
  2215   001556                     
  2216                           ;interrupts.c: 147:     I2C_2_Master_Start();
  2217   001556  ECE0  F00A         	call	i2_I2C_2_Master_Start	;wreg free
  2218                           
  2219                           ;interrupts.c: 148:     I2C_2_Master_Write(0x52 | 0x00);
  2220   00155A  0E52               	movlw	82
  2221   00155C  ECC6  F00A         	call	i2_I2C_2_Master_Write
  2222                           
  2223                           ;interrupts.c: 149:     I2C_2_Master_Write(0xe0 | 0x06 );
  2224   001560  0EE6               	movlw	230
  2225   001562  ECC6  F00A         	call	i2_I2C_2_Master_Write
  2226                           
  2227                           ;interrupts.c: 150:     I2C_2_Master_Stop();
  2228   001566  ECDB  F00A         	call	i2_I2C_2_Master_Stop	;wreg free
  2229   00156A  0012               	return		;funcret
  2230   00156C                     __end_ofi2_clearInterrupt:
  2231                           	callstack 0
  2232                           
  2233 ;; *************** function _readRedColor *****************
  2234 ;; Defined at:
  2235 ;;		line 69 in file "color.c"
  2236 ;; Parameters:    Size  Location     Type
  2237 ;;		None
  2238 ;; Auto vars:     Size  Location     Type
  2239 ;;  tmp             2    9[COMRAM] unsigned int 
  2240 ;; Return value:  Size  Location     Type
  2241 ;;                  2    4[COMRAM] unsigned int 
  2242 ;; Registers used:
  2243 ;;		wreg, status,2, status,0, cstack
  2244 ;; Tracked objects:
  2245 ;;		On entry : 0/0
  2246 ;;		On exit  : 0/0
  2247 ;;		Unchanged: 0/0
  2248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2249 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2250 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2251 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2252 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2253 ;;Total ram usage:        7 bytes
  2254 ;; Hardware stack levels used: 1
  2255 ;; Hardware stack levels required when called: 2
  2256 ;; This function calls:
  2257 ;;		_I2C_2_Master_Read
  2258 ;;		_I2C_2_Master_RepStart
  2259 ;;		i2_I2C_2_Master_Start
  2260 ;;		i2_I2C_2_Master_Stop
  2261 ;;		i2_I2C_2_Master_Write
  2262 ;; This function is called by:
  2263 ;;		_High_ISR
  2264 ;;		_readColors
  2265 ;; This function uses a non-reentrant model
  2266 ;;
  2267                           
  2268                           	psect	text18
  2269   0012B4                     __ptext18:
  2270                           	callstack 0
  2271   0012B4                     _readRedColor:
  2272                           	callstack 23
  2273   0012B4                     
  2274                           ;color.c: 71:  unsigned int tmp;;color.c: 72:  I2C_2_Master_Start();
  2275   0012B4  ECE0  F00A         	call	i2_I2C_2_Master_Start	;wreg free
  2276                           
  2277                           ;color.c: 73:  I2C_2_Master_Write(0x52 | 0x00);
  2278   0012B8  0E52               	movlw	82
  2279   0012BA  ECC6  F00A         	call	i2_I2C_2_Master_Write
  2280                           
  2281                           ;color.c: 74:  I2C_2_Master_Write(0xA0 | 0x16);
  2282   0012BE  0EB6               	movlw	182
  2283   0012C0  ECC6  F00A         	call	i2_I2C_2_Master_Write
  2284                           
  2285                           ;color.c: 75:  I2C_2_Master_RepStart();
  2286   0012C4  ECE5  F00A         	call	_I2C_2_Master_RepStart	;wreg free
  2287                           
  2288                           ;color.c: 76:  I2C_2_Master_Write(0x52 | 0x01);
  2289   0012C8  0E53               	movlw	83
  2290   0012CA  ECC6  F00A         	call	i2_I2C_2_Master_Write
  2291                           
  2292                           ;color.c: 77:  tmp=I2C_2_Master_Read(1);
  2293   0012CE  0E01               	movlw	1
  2294   0012D0  ECFA  F009         	call	_I2C_2_Master_Read
  2295   0012D4  6E07               	movwf	??_readRedColor^0,c
  2296   0012D6  5007               	movf	??_readRedColor^0,w,c
  2297   0012D8  6E0A               	movwf	readRedColor@tmp^0,c
  2298   0012DA  6A0B               	clrf	(readRedColor@tmp+1)^0,c
  2299                           
  2300                           ;color.c: 78:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2301   0012DC  0E00               	movlw	0
  2302   0012DE  ECFA  F009         	call	_I2C_2_Master_Read
  2303   0012E2  6E07               	movwf	??_readRedColor^0,c
  2304   0012E4  5007               	movf	??_readRedColor^0,w,c
  2305   0012E6  6E09               	movwf	(??_readRedColor+2)^0,c
  2306   0012E8  6A08               	clrf	(??_readRedColor+1)^0,c
  2307   0012EA  500A               	movf	readRedColor@tmp^0,w,c
  2308   0012EC  1008               	iorwf	(??_readRedColor+1)^0,w,c
  2309   0012EE  6E0A               	movwf	readRedColor@tmp^0,c
  2310   0012F0  500B               	movf	(readRedColor@tmp+1)^0,w,c
  2311   0012F2  1009               	iorwf	(??_readRedColor+2)^0,w,c
  2312   0012F4  6E0B               	movwf	(readRedColor@tmp+1)^0,c
  2313                           
  2314                           ;color.c: 79:  I2C_2_Master_Stop();
  2315   0012F6  ECDB  F00A         	call	i2_I2C_2_Master_Stop	;wreg free
  2316   0012FA                     
  2317                           ;color.c: 80:  return tmp;
  2318   0012FA  C00A  F005         	movff	readRedColor@tmp,?_readRedColor
  2319   0012FE  C00B  F006         	movff	readRedColor@tmp+1,?_readRedColor+1
  2320   001302  0012               	return		;funcret
  2321   001304                     __end_of_readRedColor:
  2322                           	callstack 0
  2323                           
  2324 ;; *************** function _readGreenColor *****************
  2325 ;; Defined at:
  2326 ;;		line 83 in file "color.c"
  2327 ;; Parameters:    Size  Location     Type
  2328 ;;		None
  2329 ;; Auto vars:     Size  Location     Type
  2330 ;;  tmp             2    9[COMRAM] unsigned int 
  2331 ;; Return value:  Size  Location     Type
  2332 ;;                  2    4[COMRAM] unsigned int 
  2333 ;; Registers used:
  2334 ;;		wreg, status,2, status,0, cstack
  2335 ;; Tracked objects:
  2336 ;;		On entry : 0/0
  2337 ;;		On exit  : 0/0
  2338 ;;		Unchanged: 0/0
  2339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2340 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2341 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2342 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2343 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2344 ;;Total ram usage:        7 bytes
  2345 ;; Hardware stack levels used: 1
  2346 ;; Hardware stack levels required when called: 2
  2347 ;; This function calls:
  2348 ;;		_I2C_2_Master_Read
  2349 ;;		_I2C_2_Master_RepStart
  2350 ;;		i2_I2C_2_Master_Start
  2351 ;;		i2_I2C_2_Master_Stop
  2352 ;;		i2_I2C_2_Master_Write
  2353 ;; This function is called by:
  2354 ;;		_High_ISR
  2355 ;;		_readColors
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359                           	psect	text19
  2360   001304                     __ptext19:
  2361                           	callstack 0
  2362   001304                     _readGreenColor:
  2363                           	callstack 23
  2364   001304                     
  2365                           ;color.c: 85:  unsigned int tmp;;color.c: 86:  I2C_2_Master_Start();
  2366   001304  ECE0  F00A         	call	i2_I2C_2_Master_Start	;wreg free
  2367                           
  2368                           ;color.c: 87:  I2C_2_Master_Write(0x52 | 0x00);
  2369   001308  0E52               	movlw	82
  2370   00130A  ECC6  F00A         	call	i2_I2C_2_Master_Write
  2371                           
  2372                           ;color.c: 88:  I2C_2_Master_Write(0xA0 | 0x18);
  2373   00130E  0EB8               	movlw	184
  2374   001310  ECC6  F00A         	call	i2_I2C_2_Master_Write
  2375                           
  2376                           ;color.c: 89:  I2C_2_Master_RepStart();
  2377   001314  ECE5  F00A         	call	_I2C_2_Master_RepStart	;wreg free
  2378                           
  2379                           ;color.c: 90:  I2C_2_Master_Write(0x52 | 0x01);
  2380   001318  0E53               	movlw	83
  2381   00131A  ECC6  F00A         	call	i2_I2C_2_Master_Write
  2382                           
  2383                           ;color.c: 91:  tmp=I2C_2_Master_Read(1);
  2384   00131E  0E01               	movlw	1
  2385   001320  ECFA  F009         	call	_I2C_2_Master_Read
  2386   001324  6E07               	movwf	??_readGreenColor^0,c
  2387   001326  5007               	movf	??_readGreenColor^0,w,c
  2388   001328  6E0A               	movwf	readGreenColor@tmp^0,c
  2389   00132A  6A0B               	clrf	(readGreenColor@tmp+1)^0,c
  2390                           
  2391                           ;color.c: 92:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2392   00132C  0E00               	movlw	0
  2393   00132E  ECFA  F009         	call	_I2C_2_Master_Read
  2394   001332  6E07               	movwf	??_readGreenColor^0,c
  2395   001334  5007               	movf	??_readGreenColor^0,w,c
  2396   001336  6E09               	movwf	(??_readGreenColor+2)^0,c
  2397   001338  6A08               	clrf	(??_readGreenColor+1)^0,c
  2398   00133A  500A               	movf	readGreenColor@tmp^0,w,c
  2399   00133C  1008               	iorwf	(??_readGreenColor+1)^0,w,c
  2400   00133E  6E0A               	movwf	readGreenColor@tmp^0,c
  2401   001340  500B               	movf	(readGreenColor@tmp+1)^0,w,c
  2402   001342  1009               	iorwf	(??_readGreenColor+2)^0,w,c
  2403   001344  6E0B               	movwf	(readGreenColor@tmp+1)^0,c
  2404                           
  2405                           ;color.c: 93:  I2C_2_Master_Stop();
  2406   001346  ECDB  F00A         	call	i2_I2C_2_Master_Stop	;wreg free
  2407   00134A                     
  2408                           ;color.c: 94:  return tmp;
  2409   00134A  C00A  F005         	movff	readGreenColor@tmp,?_readGreenColor
  2410   00134E  C00B  F006         	movff	readGreenColor@tmp+1,?_readGreenColor+1
  2411   001352  0012               	return		;funcret
  2412   001354                     __end_of_readGreenColor:
  2413                           	callstack 0
  2414                           
  2415 ;; *************** function _readClearColor *****************
  2416 ;; Defined at:
  2417 ;;		line 111 in file "color.c"
  2418 ;; Parameters:    Size  Location     Type
  2419 ;;		None
  2420 ;; Auto vars:     Size  Location     Type
  2421 ;;  tmp             2    9[COMRAM] unsigned int 
  2422 ;; Return value:  Size  Location     Type
  2423 ;;                  2    4[COMRAM] unsigned int 
  2424 ;; Registers used:
  2425 ;;		wreg, status,2, status,0, cstack
  2426 ;; Tracked objects:
  2427 ;;		On entry : 0/0
  2428 ;;		On exit  : 0/0
  2429 ;;		Unchanged: 0/0
  2430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2431 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2432 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2433 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2434 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2435 ;;Total ram usage:        7 bytes
  2436 ;; Hardware stack levels used: 1
  2437 ;; Hardware stack levels required when called: 2
  2438 ;; This function calls:
  2439 ;;		_I2C_2_Master_Read
  2440 ;;		_I2C_2_Master_RepStart
  2441 ;;		i2_I2C_2_Master_Start
  2442 ;;		i2_I2C_2_Master_Stop
  2443 ;;		i2_I2C_2_Master_Write
  2444 ;; This function is called by:
  2445 ;;		_High_ISR
  2446 ;;		_readColors
  2447 ;; This function uses a non-reentrant model
  2448 ;;
  2449                           
  2450                           	psect	text20
  2451   001354                     __ptext20:
  2452                           	callstack 0
  2453   001354                     _readClearColor:
  2454                           	callstack 23
  2455   001354                     
  2456                           ;color.c: 113:  unsigned int tmp;;color.c: 114:  I2C_2_Master_Start();
  2457   001354  ECE0  F00A         	call	i2_I2C_2_Master_Start	;wreg free
  2458                           
  2459                           ;color.c: 115:  I2C_2_Master_Write(0x52 | 0x00);
  2460   001358  0E52               	movlw	82
  2461   00135A  ECC6  F00A         	call	i2_I2C_2_Master_Write
  2462                           
  2463                           ;color.c: 116:  I2C_2_Master_Write(0xA0 | 0x14);
  2464   00135E  0EB4               	movlw	180
  2465   001360  ECC6  F00A         	call	i2_I2C_2_Master_Write
  2466                           
  2467                           ;color.c: 117:  I2C_2_Master_RepStart();
  2468   001364  ECE5  F00A         	call	_I2C_2_Master_RepStart	;wreg free
  2469                           
  2470                           ;color.c: 118:  I2C_2_Master_Write(0x52 | 0x01);
  2471   001368  0E53               	movlw	83
  2472   00136A  ECC6  F00A         	call	i2_I2C_2_Master_Write
  2473                           
  2474                           ;color.c: 119:  tmp=I2C_2_Master_Read(1);
  2475   00136E  0E01               	movlw	1
  2476   001370  ECFA  F009         	call	_I2C_2_Master_Read
  2477   001374  6E07               	movwf	??_readClearColor^0,c
  2478   001376  5007               	movf	??_readClearColor^0,w,c
  2479   001378  6E0A               	movwf	readClearColor@tmp^0,c
  2480   00137A  6A0B               	clrf	(readClearColor@tmp+1)^0,c
  2481                           
  2482                           ;color.c: 120:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2483   00137C  0E00               	movlw	0
  2484   00137E  ECFA  F009         	call	_I2C_2_Master_Read
  2485   001382  6E07               	movwf	??_readClearColor^0,c
  2486   001384  5007               	movf	??_readClearColor^0,w,c
  2487   001386  6E09               	movwf	(??_readClearColor+2)^0,c
  2488   001388  6A08               	clrf	(??_readClearColor+1)^0,c
  2489   00138A  500A               	movf	readClearColor@tmp^0,w,c
  2490   00138C  1008               	iorwf	(??_readClearColor+1)^0,w,c
  2491   00138E  6E0A               	movwf	readClearColor@tmp^0,c
  2492   001390  500B               	movf	(readClearColor@tmp+1)^0,w,c
  2493   001392  1009               	iorwf	(??_readClearColor+2)^0,w,c
  2494   001394  6E0B               	movwf	(readClearColor@tmp+1)^0,c
  2495                           
  2496                           ;color.c: 121:  I2C_2_Master_Stop();
  2497   001396  ECDB  F00A         	call	i2_I2C_2_Master_Stop	;wreg free
  2498   00139A                     
  2499                           ;color.c: 122:  return tmp;
  2500   00139A  C00A  F005         	movff	readClearColor@tmp,?_readClearColor
  2501   00139E  C00B  F006         	movff	readClearColor@tmp+1,?_readClearColor+1
  2502   0013A2  0012               	return		;funcret
  2503   0013A4                     __end_of_readClearColor:
  2504                           	callstack 0
  2505                           
  2506 ;; *************** function _readBlueColor *****************
  2507 ;; Defined at:
  2508 ;;		line 97 in file "color.c"
  2509 ;; Parameters:    Size  Location     Type
  2510 ;;		None
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;  tmp             2    9[COMRAM] unsigned int 
  2513 ;; Return value:  Size  Location     Type
  2514 ;;                  2    4[COMRAM] unsigned int 
  2515 ;; Registers used:
  2516 ;;		wreg, status,2, status,0, cstack
  2517 ;; Tracked objects:
  2518 ;;		On entry : 0/0
  2519 ;;		On exit  : 0/0
  2520 ;;		Unchanged: 0/0
  2521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2522 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2523 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2524 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2525 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2526 ;;Total ram usage:        7 bytes
  2527 ;; Hardware stack levels used: 1
  2528 ;; Hardware stack levels required when called: 2
  2529 ;; This function calls:
  2530 ;;		_I2C_2_Master_Read
  2531 ;;		_I2C_2_Master_RepStart
  2532 ;;		i2_I2C_2_Master_Start
  2533 ;;		i2_I2C_2_Master_Stop
  2534 ;;		i2_I2C_2_Master_Write
  2535 ;; This function is called by:
  2536 ;;		_High_ISR
  2537 ;;		_readColors
  2538 ;; This function uses a non-reentrant model
  2539 ;;
  2540                           
  2541                           	psect	text21
  2542   0013A4                     __ptext21:
  2543                           	callstack 0
  2544   0013A4                     _readBlueColor:
  2545                           	callstack 23
  2546   0013A4                     
  2547                           ;color.c: 99:  unsigned int tmp;;color.c: 100:  I2C_2_Master_Start();
  2548   0013A4  ECE0  F00A         	call	i2_I2C_2_Master_Start	;wreg free
  2549                           
  2550                           ;color.c: 101:  I2C_2_Master_Write(0x52 | 0x00);
  2551   0013A8  0E52               	movlw	82
  2552   0013AA  ECC6  F00A         	call	i2_I2C_2_Master_Write
  2553                           
  2554                           ;color.c: 102:  I2C_2_Master_Write(0xA0 | 0x1A);
  2555   0013AE  0EBA               	movlw	186
  2556   0013B0  ECC6  F00A         	call	i2_I2C_2_Master_Write
  2557                           
  2558                           ;color.c: 103:  I2C_2_Master_RepStart();
  2559   0013B4  ECE5  F00A         	call	_I2C_2_Master_RepStart	;wreg free
  2560                           
  2561                           ;color.c: 104:  I2C_2_Master_Write(0x52 | 0x01);
  2562   0013B8  0E53               	movlw	83
  2563   0013BA  ECC6  F00A         	call	i2_I2C_2_Master_Write
  2564                           
  2565                           ;color.c: 105:  tmp=I2C_2_Master_Read(1);
  2566   0013BE  0E01               	movlw	1
  2567   0013C0  ECFA  F009         	call	_I2C_2_Master_Read
  2568   0013C4  6E07               	movwf	??_readBlueColor^0,c
  2569   0013C6  5007               	movf	??_readBlueColor^0,w,c
  2570   0013C8  6E0A               	movwf	readBlueColor@tmp^0,c
  2571   0013CA  6A0B               	clrf	(readBlueColor@tmp+1)^0,c
  2572                           
  2573                           ;color.c: 106:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2574   0013CC  0E00               	movlw	0
  2575   0013CE  ECFA  F009         	call	_I2C_2_Master_Read
  2576   0013D2  6E07               	movwf	??_readBlueColor^0,c
  2577   0013D4  5007               	movf	??_readBlueColor^0,w,c
  2578   0013D6  6E09               	movwf	(??_readBlueColor+2)^0,c
  2579   0013D8  6A08               	clrf	(??_readBlueColor+1)^0,c
  2580   0013DA  500A               	movf	readBlueColor@tmp^0,w,c
  2581   0013DC  1008               	iorwf	(??_readBlueColor+1)^0,w,c
  2582   0013DE  6E0A               	movwf	readBlueColor@tmp^0,c
  2583   0013E0  500B               	movf	(readBlueColor@tmp+1)^0,w,c
  2584   0013E2  1009               	iorwf	(??_readBlueColor+2)^0,w,c
  2585   0013E4  6E0B               	movwf	(readBlueColor@tmp+1)^0,c
  2586                           
  2587                           ;color.c: 107:  I2C_2_Master_Stop();
  2588   0013E6  ECDB  F00A         	call	i2_I2C_2_Master_Stop	;wreg free
  2589   0013EA                     
  2590                           ;color.c: 108:  return tmp;
  2591   0013EA  C00A  F005         	movff	readBlueColor@tmp,?_readBlueColor
  2592   0013EE  C00B  F006         	movff	readBlueColor@tmp+1,?_readBlueColor+1
  2593   0013F2  0012               	return		;funcret
  2594   0013F4                     __end_of_readBlueColor:
  2595                           	callstack 0
  2596                           
  2597 ;; *************** function i2_I2C_2_Master_Write *****************
  2598 ;; Defined at:
  2599 ;;		line 45 in file "i2c.c"
  2600 ;; Parameters:    Size  Location     Type
  2601 ;;  data_byte       1    wreg     unsigned char 
  2602 ;; Auto vars:     Size  Location     Type
  2603 ;;  data_byte       1    1[COMRAM] unsigned char 
  2604 ;; Return value:  Size  Location     Type
  2605 ;;                  1    wreg      void 
  2606 ;; Registers used:
  2607 ;;		wreg, status,2, status,0, cstack
  2608 ;; Tracked objects:
  2609 ;;		On entry : 0/0
  2610 ;;		On exit  : 0/0
  2611 ;;		Unchanged: 0/0
  2612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2614 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2616 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2617 ;;Total ram usage:        1 bytes
  2618 ;; Hardware stack levels used: 1
  2619 ;; Hardware stack levels required when called: 1
  2620 ;; This function calls:
  2621 ;;		i2_I2C_2_Master_Idle
  2622 ;; This function is called by:
  2623 ;;		_readRedColor
  2624 ;;		_readGreenColor
  2625 ;;		_readBlueColor
  2626 ;;		_readClearColor
  2627 ;;		i2_clearInterrupt
  2628 ;; This function uses a non-reentrant model
  2629 ;;
  2630                           
  2631                           	psect	text22
  2632   00158C                     __ptext22:
  2633                           	callstack 0
  2634   00158C                     i2_I2C_2_Master_Write:
  2635                           	callstack 23
  2636                           
  2637                           ;incstack = 0
  2638                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  2639   00158C  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  2640   00158E                     
  2641                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  2642   00158E  EC63  F00A         	call	i2_I2C_2_Master_Idle	;wreg free
  2643   001592                     
  2644                           ;i2c.c: 48:   SSP2BUF = data_byte;
  2645   001592  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  2646   001596  0012               	return		;funcret
  2647   001598                     __end_ofi2_I2C_2_Master_Write:
  2648                           	callstack 0
  2649                           
  2650 ;; *************** function i2_I2C_2_Master_Stop *****************
  2651 ;; Defined at:
  2652 ;;		line 39 in file "i2c.c"
  2653 ;; Parameters:    Size  Location     Type
  2654 ;;		None
  2655 ;; Auto vars:     Size  Location     Type
  2656 ;;		None
  2657 ;; Return value:  Size  Location     Type
  2658 ;;                  1    wreg      void 
  2659 ;; Registers used:
  2660 ;;		wreg, status,2, status,0, cstack
  2661 ;; Tracked objects:
  2662 ;;		On entry : 0/0
  2663 ;;		On exit  : 0/0
  2664 ;;		Unchanged: 0/0
  2665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2670 ;;Total ram usage:        0 bytes
  2671 ;; Hardware stack levels used: 1
  2672 ;; Hardware stack levels required when called: 1
  2673 ;; This function calls:
  2674 ;;		i2_I2C_2_Master_Idle
  2675 ;; This function is called by:
  2676 ;;		_readRedColor
  2677 ;;		_readGreenColor
  2678 ;;		_readBlueColor
  2679 ;;		_readClearColor
  2680 ;;		i2_clearInterrupt
  2681 ;; This function uses a non-reentrant model
  2682 ;;
  2683                           
  2684                           	psect	text23
  2685   0015B6                     __ptext23:
  2686                           	callstack 0
  2687   0015B6                     i2_I2C_2_Master_Stop:
  2688                           	callstack 23
  2689   0015B6                     
  2690                           ;i2c.c: 41:   I2C_2_Master_Idle();
  2691   0015B6  EC63  F00A         	call	i2_I2C_2_Master_Idle	;wreg free
  2692   0015BA                     
  2693                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  2694   0015BA  010E               	movlb	14	; () banked
  2695   0015BC  85DA               	bsf	218,2,b	;volatile
  2696   0015BE                     
  2697                           ; BSR set to: 14
  2698   0015BE  0012               	return		;funcret
  2699   0015C0                     __end_ofi2_I2C_2_Master_Stop:
  2700                           	callstack 0
  2701                           
  2702 ;; *************** function i2_I2C_2_Master_Start *****************
  2703 ;; Defined at:
  2704 ;;		line 27 in file "i2c.c"
  2705 ;; Parameters:    Size  Location     Type
  2706 ;;		None
  2707 ;; Auto vars:     Size  Location     Type
  2708 ;;		None
  2709 ;; Return value:  Size  Location     Type
  2710 ;;                  1    wreg      void 
  2711 ;; Registers used:
  2712 ;;		wreg, status,2, status,0, cstack
  2713 ;; Tracked objects:
  2714 ;;		On entry : 0/0
  2715 ;;		On exit  : 0/0
  2716 ;;		Unchanged: 0/0
  2717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2722 ;;Total ram usage:        0 bytes
  2723 ;; Hardware stack levels used: 1
  2724 ;; Hardware stack levels required when called: 1
  2725 ;; This function calls:
  2726 ;;		i2_I2C_2_Master_Idle
  2727 ;; This function is called by:
  2728 ;;		_readRedColor
  2729 ;;		_readGreenColor
  2730 ;;		_readBlueColor
  2731 ;;		_readClearColor
  2732 ;;		i2_clearInterrupt
  2733 ;; This function uses a non-reentrant model
  2734 ;;
  2735                           
  2736                           	psect	text24
  2737   0015C0                     __ptext24:
  2738                           	callstack 0
  2739   0015C0                     i2_I2C_2_Master_Start:
  2740                           	callstack 23
  2741   0015C0                     
  2742                           ;i2c.c: 29:   I2C_2_Master_Idle();
  2743   0015C0  EC63  F00A         	call	i2_I2C_2_Master_Idle	;wreg free
  2744   0015C4                     
  2745                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  2746   0015C4  010E               	movlb	14	; () banked
  2747   0015C6  81DA               	bsf	218,0,b	;volatile
  2748   0015C8                     
  2749                           ; BSR set to: 14
  2750   0015C8  0012               	return		;funcret
  2751   0015CA                     __end_ofi2_I2C_2_Master_Start:
  2752                           	callstack 0
  2753                           
  2754 ;; *************** function _I2C_2_Master_RepStart *****************
  2755 ;; Defined at:
  2756 ;;		line 33 in file "i2c.c"
  2757 ;; Parameters:    Size  Location     Type
  2758 ;;		None
  2759 ;; Auto vars:     Size  Location     Type
  2760 ;;		None
  2761 ;; Return value:  Size  Location     Type
  2762 ;;                  1    wreg      void 
  2763 ;; Registers used:
  2764 ;;		wreg, status,2, status,0, cstack
  2765 ;; Tracked objects:
  2766 ;;		On entry : 0/0
  2767 ;;		On exit  : 0/0
  2768 ;;		Unchanged: 0/0
  2769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2774 ;;Total ram usage:        0 bytes
  2775 ;; Hardware stack levels used: 1
  2776 ;; Hardware stack levels required when called: 1
  2777 ;; This function calls:
  2778 ;;		i2_I2C_2_Master_Idle
  2779 ;; This function is called by:
  2780 ;;		_readRedColor
  2781 ;;		_readGreenColor
  2782 ;;		_readBlueColor
  2783 ;;		_readClearColor
  2784 ;;		_color_readdoublefromaddress
  2785 ;;		_color_readfromaddress
  2786 ;; This function uses a non-reentrant model
  2787 ;;
  2788                           
  2789                           	psect	text25
  2790   0015CA                     __ptext25:
  2791                           	callstack 0
  2792   0015CA                     _I2C_2_Master_RepStart:
  2793                           	callstack 23
  2794   0015CA                     
  2795                           ;i2c.c: 35:   I2C_2_Master_Idle();
  2796   0015CA  EC63  F00A         	call	i2_I2C_2_Master_Idle	;wreg free
  2797   0015CE                     
  2798                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  2799   0015CE  010E               	movlb	14	; () banked
  2800   0015D0  83DA               	bsf	218,1,b	;volatile
  2801   0015D2                     
  2802                           ; BSR set to: 14
  2803   0015D2  0012               	return		;funcret
  2804   0015D4                     __end_of_I2C_2_Master_RepStart:
  2805                           	callstack 0
  2806                           
  2807 ;; *************** function _I2C_2_Master_Read *****************
  2808 ;; Defined at:
  2809 ;;		line 51 in file "i2c.c"
  2810 ;; Parameters:    Size  Location     Type
  2811 ;;  ack             1    wreg     unsigned char 
  2812 ;; Auto vars:     Size  Location     Type
  2813 ;;  ack             1    2[COMRAM] unsigned char 
  2814 ;;  tmp             1    3[COMRAM] unsigned char 
  2815 ;; Return value:  Size  Location     Type
  2816 ;;                  1    wreg      unsigned char 
  2817 ;; Registers used:
  2818 ;;		wreg, status,2, status,0, cstack
  2819 ;; Tracked objects:
  2820 ;;		On entry : 0/0
  2821 ;;		On exit  : 0/0
  2822 ;;		Unchanged: 0/0
  2823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2825 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2826 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2827 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2828 ;;Total ram usage:        3 bytes
  2829 ;; Hardware stack levels used: 1
  2830 ;; Hardware stack levels required when called: 1
  2831 ;; This function calls:
  2832 ;;		i2_I2C_2_Master_Idle
  2833 ;; This function is called by:
  2834 ;;		_readRedColor
  2835 ;;		_readGreenColor
  2836 ;;		_readBlueColor
  2837 ;;		_readClearColor
  2838 ;;		_color_readdoublefromaddress
  2839 ;;		_color_readfromaddress
  2840 ;; This function uses a non-reentrant model
  2841 ;;
  2842                           
  2843                           	psect	text26
  2844   0013F4                     __ptext26:
  2845                           	callstack 0
  2846   0013F4                     _I2C_2_Master_Read:
  2847                           	callstack 23
  2848                           
  2849                           ; BSR set to: 14
  2850                           ;incstack = 0
  2851                           ;I2C_2_Master_Read@ack stored from wreg
  2852   0013F4  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  2853   0013F6                     
  2854                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  2855   0013F6  EC63  F00A         	call	i2_I2C_2_Master_Idle	;wreg free
  2856   0013FA                     
  2857                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  2858   0013FA  010E               	movlb	14	; () banked
  2859   0013FC  87DA               	bsf	218,3,b	;volatile
  2860                           
  2861                           ;i2c.c: 56:   I2C_2_Master_Idle();
  2862   0013FE  EC63  F00A         	call	i2_I2C_2_Master_Idle	;wreg free
  2863   001402                     
  2864                           ;i2c.c: 57:   tmp = SSP2BUF;
  2865   001402  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  2866                           
  2867                           ;i2c.c: 58:   I2C_2_Master_Idle();
  2868   001406  EC63  F00A         	call	i2_I2C_2_Master_Idle	;wreg free
  2869   00140A                     
  2870                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  2871   00140A  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  2872   00140C  B4D8               	btfsc	status,2,c
  2873   00140E  EF0B  F00A         	goto	i2u31_41
  2874   001412  EF0F  F00A         	goto	i2u31_40
  2875   001416                     i2u31_41:
  2876   001416  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2877   001418  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  2878   00141A  EF10  F00A         	goto	i2u32_48
  2879   00141E                     i2u31_40:
  2880   00141E  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2881   001420                     i2u32_48:
  2882   001420  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  2883   001422  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  2884   001424  010E               	movlb	14	; () banked
  2885   001426  51DA               	movf	218,w,b	;volatile
  2886   001428  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2887   00142A  0BDF               	andlw	-33
  2888   00142C  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2889   00142E  6FDA               	movwf	218,b	;volatile
  2890   001430                     
  2891                           ; BSR set to: 14
  2892                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  2893   001430  89DA               	bsf	218,4,b	;volatile
  2894   001432                     
  2895                           ; BSR set to: 14
  2896                           ;i2c.c: 61:   return tmp;
  2897   001432  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  2898   001434                     
  2899                           ; BSR set to: 14
  2900   001434  0012               	return		;funcret
  2901   001436                     __end_of_I2C_2_Master_Read:
  2902                           	callstack 0
  2903                           
  2904 ;; *************** function i2_I2C_2_Master_Idle *****************
  2905 ;; Defined at:
  2906 ;;		line 22 in file "i2c.c"
  2907 ;; Parameters:    Size  Location     Type
  2908 ;;		None
  2909 ;; Auto vars:     Size  Location     Type
  2910 ;;		None
  2911 ;; Return value:  Size  Location     Type
  2912 ;;                  1    wreg      void 
  2913 ;; Registers used:
  2914 ;;		wreg, status,2, status,0
  2915 ;; Tracked objects:
  2916 ;;		On entry : 0/0
  2917 ;;		On exit  : 0/0
  2918 ;;		Unchanged: 0/0
  2919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2922 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2923 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2924 ;;Total ram usage:        1 bytes
  2925 ;; Hardware stack levels used: 1
  2926 ;; This function calls:
  2927 ;;		Nothing
  2928 ;; This function is called by:
  2929 ;;		_I2C_2_Master_RepStart
  2930 ;;		_I2C_2_Master_Read
  2931 ;;		i2_I2C_2_Master_Start
  2932 ;;		i2_I2C_2_Master_Stop
  2933 ;;		i2_I2C_2_Master_Write
  2934 ;; This function uses a non-reentrant model
  2935 ;;
  2936                           
  2937                           	psect	text27
  2938   0014C6                     __ptext27:
  2939                           	callstack 0
  2940   0014C6                     i2_I2C_2_Master_Idle:
  2941                           	callstack 23
  2942   0014C6                     i2l97:
  2943   0014C6  010E               	movlb	14	; () banked
  2944   0014C8  B5D8               	btfsc	216,2,b	;volatile
  2945   0014CA  EF69  F00A         	goto	i2u29_41
  2946   0014CE  EF6B  F00A         	goto	i2u29_40
  2947   0014D2                     i2u29_41:
  2948   0014D2  EF63  F00A         	goto	i2l97
  2949   0014D6                     i2u29_40:
  2950   0014D6                     
  2951                           ; BSR set to: 14
  2952   0014D6  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  2953   0014DA  0E1F               	movlw	31
  2954   0014DC  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  2955   0014DE  A4D8               	btfss	status,2,c
  2956   0014E0  EF74  F00A         	goto	i2u30_41
  2957   0014E4  EF76  F00A         	goto	i2u30_40
  2958   0014E8                     i2u30_41:
  2959   0014E8  EF63  F00A         	goto	i2l97
  2960   0014EC                     i2u30_40:
  2961   0014EC                     
  2962                           ; BSR set to: 14
  2963   0014EC  0012               	return		;funcret
  2964   0014EE                     __end_ofi2_I2C_2_Master_Idle:
  2965                           	callstack 0
  2966                           
  2967 ;; *************** function _LEDturnOFF *****************
  2968 ;; Defined at:
  2969 ;;		line 32 in file "interact.c"
  2970 ;; Parameters:    Size  Location     Type
  2971 ;;		None
  2972 ;; Auto vars:     Size  Location     Type
  2973 ;;		None
  2974 ;; Return value:  Size  Location     Type
  2975 ;;                  1    wreg      void 
  2976 ;; Registers used:
  2977 ;;		None
  2978 ;; Tracked objects:
  2979 ;;		On entry : 0/0
  2980 ;;		On exit  : 0/0
  2981 ;;		Unchanged: 0/0
  2982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2987 ;;Total ram usage:        0 bytes
  2988 ;; Hardware stack levels used: 1
  2989 ;; This function calls:
  2990 ;;		Nothing
  2991 ;; This function is called by:
  2992 ;;		_High_ISR
  2993 ;;		_readColors
  2994 ;; This function uses a non-reentrant model
  2995 ;;
  2996                           
  2997                           	psect	text28
  2998   0015D4                     __ptext28:
  2999                           	callstack 0
  3000   0015D4                     _LEDturnOFF:
  3001                           	callstack 25
  3002   0015D4                     
  3003                           ;interact.c: 33:     LATDbits.LATD3 = 0;
  3004   0015D4  967C               	bcf	124,3,c	;volatile
  3005                           
  3006                           ;interact.c: 36:     LATGbits.LATG0 = 0;
  3007   0015D6  907F               	bcf	127,0,c	;volatile
  3008                           
  3009                           ;interact.c: 37:     LATEbits.LATE7 = 0;
  3010   0015D8  9E7D               	bcf	125,7,c	;volatile
  3011                           
  3012                           ;interact.c: 38:     LATAbits.LATA3 = 0;
  3013   0015DA  9679               	bcf	121,3,c	;volatile
  3014   0015DC  0012               	return		;funcret
  3015   0015DE                     __end_of_LEDturnOFF:
  3016                           	callstack 0
  3017                           
  3018                           	psect	smallconst
  3019   000E00                     __psmallconst:
  3020                           	callstack 0
  3021   000E00  00                 	db	0
  3022   000E01  00                 	db	0	; dummy byte at the end
  3023   000000                     
  3024                           	psect	rparam
  3025   000000                     
  3026                           	psect	temp
  3027   00004E                     btemp:
  3028                           	callstack 0
  3029   00004E                     	ds	1
  3030   000000                     int$flags	set	btemp
  3031   000000                     wtemp8	set	btemp+1
  3032   000000                     ttemp5	set	btemp+1
  3033   000000                     ttemp6	set	btemp+4
  3034   000000                     ttemp7	set	btemp+8
  3035                           
  3036                           	psect	config
  3037                           
  3038                           ;Config register CONFIG1L @ 0x300000
  3039                           ;	External Oscillator mode Selection bits
  3040                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  3041                           ;	Power-up default value for COSC bits
  3042                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  3043   300000                     	org	3145728
  3044   300000  AA                 	db	170
  3045                           
  3046                           ;Config register CONFIG1H @ 0x300001
  3047                           ;	unspecified, using default values
  3048                           ;	Clock Out Enable bit
  3049                           ;	CLKOUTEN = 0x1, unprogrammed default
  3050                           ;	Clock Switch Enable bit
  3051                           ;	CSWEN = 0x1, unprogrammed default
  3052                           ;	Fail-Safe Clock Monitor Enable bit
  3053                           ;	FCMEN = 0x1, unprogrammed default
  3054   300001                     	org	3145729
  3055   300001  FF                 	db	255
  3056                           
  3057                           ;Config register CONFIG3L @ 0x300004
  3058                           ;	WDT Period Select bits
  3059                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3060                           ;	WDT operating mode
  3061                           ;	WDTE = OFF, WDT Disabled
  3062   300004                     	org	3145732
  3063   300004  9F                 	db	159
  3064                           
  3065                           ;Config register CONFIG3H @ 0x300005
  3066                           ;	unspecified, using default values
  3067                           ;	WDT Window Select bits
  3068                           ;	WDTCWS = 0x7, unprogrammed default
  3069                           ;	WDT input clock selector
  3070                           ;	WDTCCS = 0x7, unprogrammed default
  3071   300005                     	org	3145733
  3072   300005  FF                 	db	255
  3073                           tosu	equ	0xFFF
  3074                           tosh	equ	0xFFE
  3075                           tosl	equ	0xFFD
  3076                           stkptr	equ	0xFFC
  3077                           pclatu	equ	0xFFB
  3078                           pclath	equ	0xFFA
  3079                           pcl	equ	0xFF9
  3080                           tblptru	equ	0xFF8
  3081                           tblptrh	equ	0xFF7
  3082                           tblptrl	equ	0xFF6
  3083                           tablat	equ	0xFF5
  3084                           prodh	equ	0xFF4
  3085                           prodl	equ	0xFF3
  3086                           indf0	equ	0xFEF
  3087                           postinc0	equ	0xFEE
  3088                           postdec0	equ	0xFED
  3089                           preinc0	equ	0xFEC
  3090                           plusw0	equ	0xFEB
  3091                           fsr0h	equ	0xFEA
  3092                           fsr0l	equ	0xFE9
  3093                           wreg	equ	0xFE8
  3094                           indf1	equ	0xFE7
  3095                           postinc1	equ	0xFE6
  3096                           postdec1	equ	0xFE5
  3097                           preinc1	equ	0xFE4
  3098                           plusw1	equ	0xFE3
  3099                           fsr1h	equ	0xFE2
  3100                           fsr1l	equ	0xFE1
  3101                           bsr	equ	0xFE0
  3102                           indf2	equ	0xFDF
  3103                           postinc2	equ	0xFDE
  3104                           postdec2	equ	0xFDD
  3105                           preinc2	equ	0xFDC
  3106                           plusw2	equ	0xFDB
  3107                           fsr2h	equ	0xFDA
  3108                           fsr2l	equ	0xFD9
  3109                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         35
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     42      77
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    decideColor@normRGB	PTR struct normColors size(1) Largest target is 6
		 -> normRGB(COMRAM[6]), 

    normalizeColors@normRGB	PTR struct normColors size(1) Largest target is 6
		 -> normRGB(COMRAM[6]), 

    normalizeColors@RGBC	PTR struct colors size(1) Largest target is 8
		 -> RGBC(COMRAM[8]), 


Critical Paths under _main in COMRAM

    _main->_normalizeColors
    _normalizeColors->___lwdiv
    _interrupts_init->_color_writetoaddr
    _clearInterrupt->_I2C_2_Master_Write
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _High_ISR in COMRAM

    _High_ISR->_readBlueColor
    _High_ISR->_readClearColor
    _High_ISR->_readGreenColor
    _High_ISR->_readRedColor
    i2_clearInterrupt->i2_I2C_2_Master_Write
    _readRedColor->_I2C_2_Master_Read
    _readGreenColor->_I2C_2_Master_Read
    _readClearColor->_I2C_2_Master_Read
    _readBlueColor->_I2C_2_Master_Read
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->i2_I2C_2_Master_Idle
    _I2C_2_Master_Read->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    None.

Critical Paths under _High_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _High_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _High_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _High_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _High_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _High_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _High_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _High_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _High_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _High_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _High_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _High_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _High_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _High_ISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    3358
                                             34 COMRAM     8     8      0
                          _LEDturnON
                        _Timer0_init
                   _color_click_init
                        _decideColor
                   _init_buttons_LED
                    _interrupts_init
                    _normalizeColors
 ---------------------------------------------------------------------------------
 (1) _normalizeColors                                     14    12      2    1398
                                             20 COMRAM    14    12      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     912
                                             13 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _interrupts_init                                      0     0      0     758
                     _clearInterrupt
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _clearInterrupt                                       0     0      0      15
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _init_buttons_LED                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _decideColor                                          4     2      2     186
                                             13 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     743
                                             17 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     743
                                             15 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      15
                                             14 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                             13 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDturnON                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _High_ISR                                             2     2      0     474
                                             11 COMRAM     2     2      0
                         _LEDturnOFF
                      _readBlueColor
                     _readClearColor
                     _readGreenColor
                       _readRedColor
                   i2_clearInterrupt
 ---------------------------------------------------------------------------------
 (6) i2_clearInterrupt                                     0     0      0      22
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (6) _readRedColor                                         7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (6) _readGreenColor                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (6) _readClearColor                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (6) _readBlueColor                                        7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (7) i2_I2C_2_Master_Write                                 1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (7) i2_I2C_2_Master_Stop                                  0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (7) i2_I2C_2_Master_Start                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (7) _I2C_2_Master_RepStart                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (7) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (8) i2_I2C_2_Master_Idle                                  1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _LEDturnOFF                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LEDturnON
   _Timer0_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _decideColor
   _init_buttons_LED
   _interrupts_init
     _clearInterrupt
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_writetoaddr
   _normalizeColors
     ___lwdiv

 _High_ISR (ROOT)
   _LEDturnOFF
   _readBlueColor
     _I2C_2_Master_Read
       i2_I2C_2_Master_Idle
     _I2C_2_Master_RepStart
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle
   _readClearColor
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     i2_I2C_2_Master_Start
     i2_I2C_2_Master_Stop
     i2_I2C_2_Master_Write
   _readGreenColor
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     i2_I2C_2_Master_Start
     i2_I2C_2_Master_Stop
     i2_I2C_2_Master_Write
   _readRedColor
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     i2_I2C_2_Master_Start
     i2_I2C_2_Master_Stop
     i2_I2C_2_Master_Write
   i2_clearInterrupt
     i2_I2C_2_Master_Start
     i2_I2C_2_Master_Stop
     i2_I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      51        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBIGSFRhlll       9E      0       0      39        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2A      4D       1       81.9%
BITBIGSFRhhhhll     4A      0       0      34        0.0%
BITBIGSFRlllhlh     3B      0       0      44        0.0%
BITBIGSFRllh        2D      0       0      41        0.0%
BITBIGSFRllllh      2B      0       0      48        0.0%
BITBIGSFRlllhhl     29      0       0      43        0.0%
BITBIGSFRhhhhlh     1B      0       0      33        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      42        0.0%
BITBIGSFRlllhll      9      0       0      46        0.0%
BITBIGSFRlllhlh      9      0       0      45        0.0%
BITBIGSFRhllh        2      0       0      38        0.0%
BITBIGSFRhhl         2      0       0      36        0.0%
BITBIGSFRlllhll      1      0       0      47        0.0%
BITBIGSFRhhhl        1      0       0      35        0.0%
BITBIGSFRlh          1      0       0      40        0.0%
BITBIGSFRhlh         1      0       0      37        0.0%
BITBIGSFRlllll       1      0       0      49        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4D      50        0.0%
DATA                 0      0      4D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Mar 05 15:02:36 2024

           ??_init_buttons_LED 000E                              _w 0031                              _x 002F  
                            _y 002D                              _z 002B                             l31 1472  
                           l40 150C                             l62 11EE                             l55 110E  
                           l94 149C                             l97 149E                             u10 14AE  
                           u11 14AA                             u20 14C4                             u21 14C0  
                          l100 14C4                            l103 15AA                            l112 158A  
                          l210 15B4                            l109 15A0                            l207 157E  
                          l173 0E78                            l182 0F92                            l272 12B2  
                          l176 0ED6                            l275 1528                            l179 0F34  
                          l286 1554                            l792 1262                            l785 125A  
                          l971 15A2                            l973 15A6                            l981 159C  
                          l991 1484                            l967 149E                            l975 1582  
                          l993 1486                            l969 14AE                            l977 1586  
                          l995 1488                            l987 1474                            l979 1598  
                          l997 148A                            l989 147E                            u400 11CE  
                          u401 11CA                            u330 120A                            u410 0E44  
                          u331 1206                            u411 0E40                            u340 1228  
                          u420 0E72                            u341 1224                            u421 0E6E  
                          u350 1244                            u430 0EBC                            u351 1240  
                          u431 0EB8                            u360 1132                            u440 0ED0  
                          u361 112E                            u441 0ECC                            u370 1160  
                          u450 0F1A                            u371 115C                            u451 0F16  
                          u380 118A                            u460 0F2E                            u381 1186  
                          u461 0F2A                            u390 11AC                            u470 0F78  
                          u391 11A8                            u607 0F9E                            u471 0F74  
                          u480 0F8C                            u617 0FB6                            u481 0F88  
                          u537 0E24                            u490 0FD6                            u627 144A  
                          u491 0FD2                            u547 0E84                            u557 0E9C  
                          u567 0EE2                            u577 0EFA                            u587 0F40  
                          u597 0F58                            _red 003D                            wreg 0FE8  
                         l1105 15AC                           l1019 1540                           l1145 156C  
                         l1401 11F0                           l1411 1228                           l1403 11F8  
                         l1181 1526                           l1501 118A                           l1421 1254  
                         l1413 122E                           l1405 120A                           l1175 150E  
                         l1503 11AC                           l1415 1244                           l1407 1212  
                         l1177 1516                           l1441 1454                           l1505 11CE  
                         l1513 11E6                           l1521 1264                           l1417 124C  
                         l1409 121A                           l1601 0E0E                           l1179 151C  
                         l1443 145E                           l1435 1436                           l1531 1274  
                         l1523 126A                           l1419 124E                           l1611 0E34  
                         l1603 0E12                           l1381 14F0                           l1445 1468  
                         l1437 143A                           l1509 11DA                           l1541 12A6  
                         l1533 127E                           l1525 126E                           l1613 0E44  
                         l1605 0E16                           l1439 1444                           l1543 12AA  
                         l1535 1288                           l1527 1270                           l1471 0FE8  
                         l1623 0E7A                           l1631 0EBC                           l1615 0E60  
                         l1607 0E1A                           l1545 12AC                           l1537 1292  
                         l1529 1272                           l1481 10C2                           l1473 1032  
                         l1641 0ED8                           l1633 0ED0                           l1625 0E90  
                         l1617 0E72                           l1609 0E32                           l1491 113E  
                         l1547 12B0                           l1539 129C                           l1483 10DE  
                         l1475 104E                           l1651 0F30                           l1643 0EEE  
                         l1635 0ED2                           l1627 0EAA                           l1619 0E74  
                         l1493 1160                           l1485 1110                           l1477 1076  
                         l1661 0F66                           l1645 0F08                           l1629 0EAC  
                         l1487 1132                           l1479 1092                           l1663 0F78  
                         l1647 0F1A                           l1681 0FDA                           l1673 0F94  
                         l1665 0F8C                           l1657 0F36                           l1649 0F2E  
                         l1593 0E02                           l1499 116C                           l1683 0FDE  
                         l1675 0FAA                           l1667 0F8E                           l1659 0F4C  
                         l1595 0E06                           l1677 0FC4                           l1597 0E0A  
                         l1679 0FD6                           l1599 0E0C                           _RGBC 0040  
                         i2l43 1302                           i2l52 13A2                           i2l46 1352  
                         i2l49 13F2                           i2l97 14C6        __end_of_interrupts_init 12B4  
                         _blue 0039                           _main 0E02                           fsr2h 0FDA  
                         fsr2l 0FD9                           btemp 004E                           start 0136  
                  ?_LEDturnOFF 0001                   ___param_bank 0000             normalizeColors@sum 001F  
                        ?_main 0001                __end_of___lwdiv 1264                          i2l100 14EC  
                        i2l103 15C8                          i2l112 1596                          i2l106 15D2  
                        i2l115 1434                          i2l213 15DC                          i2l109 15BE  
              readRedColor@tmp 000A                          i2l283 0132                          i2l286 156A  
             i2_clearInterrupt 1556                          _TMR0H 0FD4                          _TMR0L 0FD3  
   __end_of_I2C_2_Master_Start 15AC     __end_of_I2C_2_Master_Write 158C                          _clear 0037  
                        _green 003B                          main@i 0025                          plusw2 0FDB  
                        ttemp5 004F                          ttemp6 0052                          ttemp7 0056  
                        status 0FD8                          wtemp8 004F          _I2C_2_Master_RepStart 15CA  
             __end_of_High_ISR 0136                __initialization 152A                   __end_of_main 0FE8  
          normalizeColors@RGBC 0015                _normalizeColors 0FE8                         ??_main 0023  
                __activetblptr 0000                  ?_readRedColor 0005                         _RD5PPS 0E6F  
                       i2l1107 15D4                         _RD6PPS 0E70                         i2l1423 15C0  
                       i2l1431 158E                         i2l1425 15C4                         i2l1433 1592  
                       i2l1427 15B6                         i2l1429 15BA                         i2l1461 13EA  
                       i2l1453 1304                         i2l1701 0078                         i2l1391 1402  
                       i2l1383 15CA                         i2l1455 134A                         i2l1447 12B4  
                       i2l1711 00B8                         i2l1703 007A                         i2l1377 14C6  
                       i2l1393 140A                         i2l1385 15CE                         i2l1465 1354  
                       i2l1449 12FA                         i2l1721 00F8                         i2l1713 00BA  
                       i2l1705 007C                         i2l1379 14D6                         i2l1395 1430  
                       i2l1387 13F6                         i2l1459 13A4                         i2l1467 139A  
                       i2l1723 00FA                         i2l1715 00BC                         i2l1707 0094  
                       i2l1731 011E                         i2l1397 1432                         i2l1389 13FA  
                       i2l1549 1556                         i2l1733 012C                         i2l1725 0112  
                       i2l1717 00D4                         i2l1709 00A0                         i2l1735 012E  
                       i2l1719 00E0                         i2l1727 0116                         i2l1729 011A  
                       i2l1691 0036                         i2l1693 003A                         i2l1685 000A  
                       i2l1695 003C                         i2l1687 001A                         i2l1697 0054  
                       i2l1689 002A                         i2l1699 0060               ?_interrupts_init 0001  
            __end_of_LEDturnON 15B6       __end_of_color_click_init 1474              readGreenColor@tmp 000A  
                ??_Timer0_init 000E                      ??___lwdiv 0012              readClearColor@tmp 000A  
                       clear_0 1530                         isa$std 0001                 ??_readRedColor 0007  
                _readBlueColor 13A4                   __mediumconst 0000         normalizeColors@normRGB 0016  
                   __accesstop 0060        __end_of__initialization 1536                 _clearInterrupt 1540  
       ?_I2C_2_Master_RepStart 0001                  ___rparam_used 0001                 __pcstackCOMRAM 0001  
      __end_of_normalizeColors 1110            __end_of_Timer0_init 152A                 ?_readBlueColor 0005  
                    ?_High_ISR 0001         __end_of_clearInterrupt 1556       __end_ofi2_clearInterrupt 156C  
                 ??_LEDturnOFF 0001              _color_writetoaddr 14EE             ?_color_writetoaddr 0010  
               main@colourCode 0029            ??_color_writetoaddr 0011                        _INT0PPS 0DF0  
                      i2u30_40 14EC                        i2u30_41 14E8                        i2u31_40 141E  
                      i2u31_41 1416                        i2u32_48 1420                        i2u50_40 001A  
                      i2u50_41 0016                        i2u51_40 002A                        i2u51_41 0026  
                      i2u52_40 012C                        i2u52_41 0128             __end_of_LEDturnOFF 15DE  
                      i2u29_40 14D6                        i2u29_41 14D2                        i2u63_47 0046  
                      i2u64_47 006A                        i2u65_47 0086                        i2u66_47 00AA  
                      i2u67_47 00C6                        i2u68_47 00EA                        i2u69_47 0104  
                      _SSP2ADD 0ED6                     ??_High_ISR 000C                        _SSP2BUF 0ED5  
                   _colourCode 0033                ?_clearInterrupt 0001         color_writetoaddr@value 0010  
    __end_of_color_writetoaddr 150E           __end_of_readRedColor 1304             _I2C_2_Master_Start 15A2  
          i2_I2C_2_Master_Idle 14C6             _I2C_2_Master_Write 1580                        __Hparam 0000  
          i2_I2C_2_Master_Stop 15B6                        __Lparam 0000                    _Timer0_init 150E  
             ?_normalizeColors 0015                  ??_decideColor 0010            ?_I2C_2_Master_Start 0001  
                      ___lwdiv 11F0            ?_I2C_2_Master_Write 0001                   __psmallconst 0E00  
              ??_readBlueColor 0007                        __pcinit 152A                        __ramtop 0E00  
                      __ptext0 0E02                        __ptext1 0FE8                        __ptext2 11F0  
                      __ptext3 1264                        __ptext4 1540                        __ptext5 156C  
                      __ptext6 1110                        __ptext7 1436                        __ptext8 14EE  
                      __ptext9 1580           ?i2_I2C_2_Master_Idle 0001           ?i2_I2C_2_Master_Stop 0001  
               _readClearColor 1354                        _normRGB 0048           ??_I2C_2_Master_Start 000F  
         ??_I2C_2_Master_Write 000F           end_of_initialization 1536              ?_color_click_init 0001  
           ??_color_click_init 0012                      _LEDturnON 15AC                        postdec2 0FDD  
                      postinc0 0FEE                        postinc2 0FDE         __end_of_readClearColor 13A4  
        ??i2_I2C_2_Master_Idle 0001                 _readGreenColor 1304          ??i2_I2C_2_Master_Stop 0002  
             _init_buttons_LED 156C            __end_of_decideColor 11F0                      _TRISAbits 0F81  
                    _TRISDbits 0F84                      _TRISEbits 0F85                      _TRISGbits 0F87  
                    _TRISHbits 0F88       color_writetoaddr@address 0011        ??_I2C_2_Master_RepStart 0002  
                   ?_LEDturnON 0001         __end_of_readGreenColor 1354                ?_readClearColor 0005  
          start_initialization 152A              ?i2_clearInterrupt 0001             ??i2_clearInterrupt 0003  
                  _decideColor 1110  i2I2C_2_Master_Write@data_byte 0002                ?_readGreenColor 0005  
 __end_ofi2_I2C_2_Master_Start 15CA   __end_ofi2_I2C_2_Master_Write 1598                   _readRedColor 12B4  
                  __pbssCOMRAM 002B               ??_clearInterrupt 0010                    ??_LEDturnON 000E  
             ___lwdiv@dividend 000E                   ?_Timer0_init 0001                      __pintcode 0008  
                     ?___lwdiv 000E           I2C_2_Master_Read@ack 0003              ??_interrupts_init 0012  
         I2C_2_Master_Read@tmp 0004                    __smallconst 0E00              _I2C_2_Master_Idle 149E  
            _I2C_2_Master_Init 1474              _I2C_2_Master_Read 13F4              _I2C_2_Master_Stop 1598  
                    _increment 0035             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 0012  
          ??_I2C_2_Master_Idle 000E            ??_I2C_2_Master_Init 000E            ??_I2C_2_Master_Read 0002  
                     _LATAbits 0F79            ??_I2C_2_Master_Stop 000F                       _LATDbits 0F7C  
                     _LATEbits 0F7D                       _LATGbits 0F7F                       _LATHbits 0F80  
                     _IPR0bits 0E1F                       _PIE0bits 0E29       __end_of_init_buttons_LED 1580  
                     _PIR0bits 0E33               readBlueColor@tmp 000A                       _SSP2CON2 0EDA  
                     _SSP2STAT 0ED8      __end_of_I2C_2_Master_Idle 14C6          __end_of_readBlueColor 13F4  
    __end_of_I2C_2_Master_Init 149E                      main@i_705 0026      __end_of_I2C_2_Master_Read 1436  
                    main@i_706 0027                      main@i_707 0028      __end_of_I2C_2_Master_Stop 15A2  
  I2C_2_Master_Write@data_byte 000F                       _High_ISR 0008                  _wall_detected 003F  
__end_of_I2C_2_Master_RepStart 15D4           i2_I2C_2_Master_Start 15C0           i2_I2C_2_Master_Write 158C  
                     __Hrparam 0000                       __Lrparam 0000    __end_ofi2_I2C_2_Master_Idle 14EE  
             ??_readClearColor 0007    __end_ofi2_I2C_2_Master_Stop 15C0                     _ANSELBbits 0E9A  
                   _ANSELDbits 0EA7                     _T0CON0bits 0FD5                     _T0CON1bits 0FD6  
              ___lwdiv@divisor 0010                ___lwdiv@counter 0014                       __ptext10 1598  
                     __ptext11 15A2                       __ptext20 1354                       __ptext12 149E  
                     __ptext21 13A4                       __ptext13 1474                       __ptext22 158C  
                     __ptext14 150E                       __ptext23 15B6                       __ptext15 15AC  
                     __ptext24 15C0                       __ptext25 15CA                       __ptext17 1556  
                     __ptext26 13F4                       __ptext18 12B4                       __ptext27 14C6  
                     __ptext19 1304                       __ptext28 15D4                   _SSP2CON1bits 0ED9  
                 _SSP2CON2bits 0EDA           _normalizeColors$1889 0021          ?i2_I2C_2_Master_Start 0001  
        ?i2_I2C_2_Master_Write 0001                       isa$xinst 0000               ??_readGreenColor 0007  
                     int$flags 004E                   ?_decideColor 000E                     _INTCONbits 0FF2  
            ??_normalizeColors 0017                       intlevel2 0000                     _LEDturnOFF 15D4  
              _interrupts_init 1264               _color_click_init 1436                     _SSP2DATPPS 0E1D  
                   _SSP2CLKPPS 0E1C         ??i2_I2C_2_Master_Start 0002         ??i2_I2C_2_Master_Write 0002  
           decideColor@normRGB 000E              ?_init_buttons_LED 0001  
